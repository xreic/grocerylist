{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// Dependencies\nimport { useQuery } from '@apollo/react-hooks'; // Styles\n\nimport { Heading, Stack, useToast } from '@chakra-ui/core'; // Apollo\n\nimport { USER_HISTORY_QUERY } from '../lib/apollo/queries'; // Components\n\nimport Loading from './Loading';\nimport HistoryList from './HistoryList';\n\nconst HistoryLayout = () => {\n  // Hooks\n  const toast = useToast(); // Apollo\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(USER_HISTORY_QUERY);\n\n  if (error) {\n    toast({\n      description: error,\n      status: 'error',\n      duration: 9001,\n      isClosable: true\n    });\n  }\n\n  if (loading) {\n    return __jsx(Loading, null);\n  }\n\n  if (data === null || data === void 0 ? void 0 : data.currentUserHistory.nodes.length) {\n    const list = data.currentUserHistory.nodes;\n    return __jsx(Stack, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      spacing: \"0.5rem\"\n    }, list.map(item => __jsx(HistoryList, _extends({\n      key: item.createdAt\n    }, item))));\n  } else {\n    return __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\"\n    }, \"Remember to add to your list. \\uD83D\\uDCDD\");\n  }\n};\n\nexport default HistoryLayout;","map":null,"metadata":{},"sourceType":"module"}