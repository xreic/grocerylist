{"ast":null,"code":"var __jsx = React.createElement;\n// Dependencies\nimport React, { useContext, useState, useRef } from 'react';\nimport { useMutation } from '@apollo/react-hooks'; // Styles\n\nimport { Box, Flex, Grid, IconButton, Stack } from '@chakra-ui/core';\nimport { MdAddShoppingCart, MdReceipt } from 'react-icons/md'; // Helpers\n\nimport { ViewContext } from '../lib/ViewContext';\nimport { ADD_ITEM_MUTATION } from '../lib/mutations';\nimport { ALL_ITEMS_QUERY } from '../lib/queries';\nimport { StyledButton, StyledInput } from './styles/styled';\n\nconst GroceryForm = () => {\n  const productRef = useRef('');\n  const quantityRef = useRef('');\n  const {\n    0: status,\n    1: setStatus\n  } = useState(false);\n  const {\n    isAdd,\n    setIsAdd\n  } = useContext(ViewContext);\n  const [addItem, itemRes] = useMutation(ADD_ITEM_MUTATION, {\n    update(cache, {\n      data: {\n        addItem\n      }\n    }) {\n      const {\n        items: {\n          nodes\n        }\n      } = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      });\n      const {\n        item\n      } = addItem;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: {\n          items: {\n            nodes: [item, ...nodes]\n          }\n        }\n      });\n    }\n\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setStatus(true);\n    const input = {\n      product: productRef.current.value,\n      quantity: parseInt(quantityRef.current.value)\n    };\n    addItem({\n      variables: {\n        input\n      }\n    });\n    setStatus(false);\n    productRef.current.value = '';\n    quantityRef.current.value = '';\n    productRef.current.focus();\n  };\n\n  const handleClick = () => {\n    setIsAdd(!isAdd);\n  };\n\n  return __jsx(Stack, {\n    spacing: \"2rem\",\n    paddingBottom: \"2rem\"\n  }, isAdd ? __jsx(IconButton, {\n    variantColor: \"blue\",\n    icon: MdAddShoppingCart,\n    width: \"65%\",\n    maxWidth: \"300px\",\n    alignSelf: \"center\",\n    onClick: handleClick,\n    \"aria-label\": \"Check to switch from add to remove\"\n  }) : __jsx(IconButton, {\n    variantColor: \"blue\",\n    icon: MdReceipt,\n    width: \"65%\",\n    maxWidth: \"300px\",\n    alignSelf: \"center\",\n    onClick: handleClick,\n    \"aria-label\": \"Check to switch from remove to add\"\n  }), isAdd && __jsx(Flex, {\n    justify: \"center\"\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit\n  }, __jsx(Grid, {\n    templateColumns: \"5fr 1fr\"\n  }, __jsx(Box, null, __jsx(StyledInput, {\n    type: \"text\",\n    placeholder: \"Product\",\n    isDisabled: status,\n    ref: productRef\n  }), __jsx(StyledInput, {\n    type: \"number\",\n    placeholder: \"Quantity\",\n    isDisabled: status,\n    ref: quantityRef\n  })), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: MdAddShoppingCart,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    height: true\n  })))));\n};\n\nexport default GroceryForm;","map":null,"metadata":{},"sourceType":"module"}