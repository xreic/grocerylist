{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks'; // Helpers\n\nimport { ALL_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations'; // Styles\n\nimport { Heading, List, ListItem, Skeleton, SimpleGrid } from '@chakra-ui/core'; // Components\n\nimport Item from './Item';\n\nconst GroceryList = () => {\n  // Apollo\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALL_ITEMS_QUERY);\n  const [deleteItem, deleteRes] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, {\n      data: {\n        deleteItem\n      }\n    }) {\n      const {\n        items: {\n          nodes\n        }\n      } = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      });\n      const {\n        id\n      } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: {\n          items: {\n            nodes: nodes.filter(node => node.id !== id)\n          }\n        }\n      });\n    }\n\n  });\n  if (error) console.log('error:', JSON.parse(JSON.stringify(error)));\n\n  const handleClick = id => {\n    deleteItem({\n      variables: {\n        input: {\n          id\n        }\n      }\n    });\n  };\n\n  if (!loading && !error && list && list.length > 0) {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(List, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(ListItem, {\n      paddingBottom: \"0.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"Item\"), __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Quantity\"))), list.map(item => __jsx(Item, {\n      key: item.id + item.product,\n      id: item.id,\n      product: item.product,\n      quantity: item.quantity,\n      handleClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"No groceries.\"));\n  }\n};\n\nexport default GroceryList;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useMutation","useQuery","ALL_ITEMS_QUERY","REMOVE_ITEM_MUTATION","Heading","List","ListItem","Skeleton","SimpleGrid","Item","GroceryList","data","loading","error","deleteItem","deleteRes","update","cache","items","nodes","readQuery","query","id","item","writeQuery","filter","node","console","log","JSON","parse","stringify","handleClick","variables","input","list","length","map","product","quantity"],"mappings":"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","sourcesContent":["// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\n// Helpers\nimport { ALL_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations';\n\n// Styles\nimport { Heading, List, ListItem, Skeleton, SimpleGrid } from '@chakra-ui/core';\n\n// Components\nimport Item from './Item';\n\nconst GroceryList = () => {\n  // Apollo\n  const { data, loading, error } = useQuery(ALL_ITEMS_QUERY);\n  const [deleteItem, deleteRes] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, { data: { deleteItem } }) {\n      const {\n        items: { nodes }\n      } = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\n      const { id } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: { items: { nodes: nodes.filter((node) => node.id !== id) } }\n      });\n    }\n  });\n\n  if (error) console.log('error:', JSON.parse(JSON.stringify(error)));\n\n  const handleClick = (id) => {\n    deleteItem({ variables: { input: { id } } });\n  };\n\n  if (!loading && !error && list && list.length > 0) {\n    return (\n      <React.Fragment>\n        {/* <p>Error: {error.message}</p> */}\n        <List width=\"60%\" maxWidth=\"500px\" minWidth=\"300px\" margin=\"auto\">\n          <ListItem paddingBottom=\"0.5rem\">\n            <SimpleGrid columns=\"3\">\n              <Heading as=\"h4\" size=\"lg\">\n                Item\n              </Heading>\n              <Heading as=\"h4\" size=\"lg\">\n                Quantity\n              </Heading>\n            </SimpleGrid>\n          </ListItem>\n          {list.map((item) => (\n            <Item\n              key={item.id + item.product}\n              id={item.id}\n              product={item.product}\n              quantity={item.quantity}\n              handleClick={handleClick}\n            />\n          ))}\n        </List>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        {/* <p>Error: {error.message}</p> */}\n        <Heading as=\"h4\" size=\"lg\">\n          No groceries.\n        </Heading>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}