{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useMutation } from '@apollo/react-hooks';\nimport { REMOVE_ITEM_MUTATION } from '../lib/mutations';\nimport { ALL_ITEMS_QUERY } from '../lib/queries';\nimport { List, ListItem, SimpleGrid, Heading } from '@chakra-ui/core';\nimport Item from './Item';\n\nconst GroceryList = () => {\n  const [deleteItem, deleteRes] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, {\n      data: {\n        deleteItem\n      }\n    }) {\n      const {\n        items: {\n          nodes\n        }\n      } = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      });\n      const {\n        id\n      } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: {\n          items: {\n            nodes: nodes.filter(node => node.id !== id)\n          }\n        }\n      });\n    }\n\n  });\n\n  const handleClick = id => {\n    deleteItem({\n      variables: {\n        input: {\n          id\n        }\n      }\n    });\n  };\n\n  const items = [];\n\n  if (items.length > 0) {\n    return __jsx(List, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      paddingBottom: \"0.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Item\"), __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Quantity\"))), items.map(item => __jsx(Item, {\n      key: item.id + item.product,\n      id: item.id,\n      product: item.product,\n      quantity: item.quantity,\n      handleClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, \"No groceries.\");\n  }\n};\n\nexport default GroceryList;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useMutation","REMOVE_ITEM_MUTATION","ALL_ITEMS_QUERY","List","ListItem","SimpleGrid","Heading","Item","GroceryList","deleteItem","deleteRes","update","cache","data","items","nodes","readQuery","query","id","item","writeQuery","filter","node","handleClick","variables","input","length","map","product","quantity"],"mappings":";;;AAAA,SAAUA,WAAV,QAA6B,qBAA7B;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,OAArC,QAAoD,iBAApD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,UAAD,EAAaC,SAAb,IAA0BV,WAAW,CAACC,oBAAD,EAAuB;AAChEU,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA;AAAF;AAAR,KAAR,EAAkC;AACtC,YAAM;AACJK,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AADH,UAEFH,KAAK,CAACI,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEf;AAAT,OAAhB,CAFJ;AAIA,YAAM;AAAEgB,QAAAA;AAAF,UAAST,UAAU,CAACU,IAA1B;AACAP,MAAAA,KAAK,CAACQ,UAAN,CAAiB;AACfH,QAAAA,KAAK,EAAEf,eADQ;AAEfW,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEA,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC;AAAT;AAAT;AAFS,OAAjB;AAID;;AAX+D,GAAvB,CAA3C;;AAeA,QAAMK,WAAW,GAAIL,EAAD,IAAQ;AAC1BT,IAAAA,UAAU,CAAC;AAAEe,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEP,UAAAA;AAAF;AAAT;AAAb,KAAD,CAAV;AACD,GAFD;;AAGA,QAAMJ,KAAK,GAAG,EAAd;;AAEA,MAAIA,KAAK,CAACY,MAAN,GAAe,CAAnB,EAAsB;AACpB,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,KAAZ;AAAkB,MAAA,QAAQ,EAAC,OAA3B;AAAmC,MAAA,QAAQ,EAAC,OAA5C;AAAoD,MAAA,MAAM,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,aAAa,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,MAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CADF,EAWGZ,KAAK,CAACa,GAAN,CAAWR,IAAD,IACT,MAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACD,EAAL,GAAUC,IAAI,CAACS,OADtB;AAEE,MAAA,EAAE,EAAET,IAAI,CAACD,EAFX;AAGE,MAAA,OAAO,EAAEC,IAAI,CAACS,OAHhB;AAIE,MAAA,QAAQ,EAAET,IAAI,CAACU,QAJjB;AAKE,MAAA,WAAW,EAAEN,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAXH,CADF;AAuBD,GAxBD,MAwBO;AACL,WACE,MAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF;AAKD;AACF,CApDD;;AAsDA,eAAef,WAAf","sourcesContent":["import {  useMutation } from '@apollo/react-hooks';\nimport { REMOVE_ITEM_MUTATION } from '../lib/mutations';\nimport { ALL_ITEMS_QUERY } from '../lib/queries';\nimport { List, ListItem, SimpleGrid, Heading } from '@chakra-ui/core';\nimport Item from './Item';\n\nconst GroceryList = () => {\n  const [deleteItem, deleteRes] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, { data: { deleteItem } }) {\n      const {\n        items: { nodes }\n      } = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\n      const { id } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: { items: { nodes: nodes.filter((node) => node.id !== id) } }\n      });\n    }\n  });\n\n\n  const handleClick = (id) => {\n    deleteItem({ variables: { input: { id } } });\n  };\n  const items = [];\n\n  if (items.length > 0) {\n    return (\n      <List width=\"60%\" maxWidth=\"500px\" minWidth=\"300px\" margin=\"auto\">\n        <ListItem paddingBottom=\"0.5rem\">\n          <SimpleGrid columns=\"3\">\n            <Heading as=\"h4\" size=\"lg\">\n              Item\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              Quantity\n            </Heading>\n          </SimpleGrid>\n        </ListItem>\n        {items.map((item) => (\n          <Item\n            key={item.id + item.product}\n            id={item.id}\n            product={item.product}\n            quantity={item.quantity}\n            handleClick={handleClick}\n          />\n        ))}\n      </List>\n    );\n  } else {\n    return (\n      <Heading as=\"h4\" size=\"lg\">\n        No groceries.\n      </Heading>\n    );\n  }\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}