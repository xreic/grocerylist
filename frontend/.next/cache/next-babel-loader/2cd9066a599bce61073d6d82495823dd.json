{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks'; // Helpers\n\nimport { REMOVE_ITEM_MUTATION } from '../lib/mutations';\nimport { ALL_ITEMS_QUERY } from '../lib/queries'; // Styles\n\nimport { List, ListItem, SimpleGrid, Heading } from '@chakra-ui/core'; // Components\n\nimport Item from './Item';\n\nvar GroceryList = function GroceryList() {\n  _s();\n\n  var _useQuery = useQuery(ALL_ITEMS_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(REMOVE_ITEM_MUTATION, {\n    update: function update(cache, _ref) {\n      var deleteItem = _ref.data.deleteItem;\n\n      var _cache$readQuery = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      }),\n          nodes = _cache$readQuery.items.nodes;\n\n      var id = deleteItem.item.id;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: {\n          items: {\n            nodes: nodes.filter(function (node) {\n              return node.id !== id;\n            })\n          }\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteItem = _useMutation2[0],\n      deleteRes = _useMutation2[1];\n\n  var handleClick = function handleClick(id) {\n    deleteItem({\n      variables: {\n        input: {\n          id: id\n        }\n      }\n    });\n  };\n\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  console.log(data);\n  console.log(data);\n\n  if (!loading && data.items && data.items.length > 0) {\n    return __jsx(List, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      paddingBottom: \"0.5rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Item\"), __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Quantity\"))), data.items.map(function (item) {\n      return __jsx(Item, {\n        key: item.id + item.product,\n        id: item.id,\n        product: item.product,\n        quantity: item.quantity,\n        handleClick: handleClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      });\n    }));\n  } else {\n    return __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, \"No groceries.\");\n  }\n};\n\n_s(GroceryList, \"E3tadQ8MiuQT+LlLPZg9RFtEKJI=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = GroceryList;\nexport default GroceryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useMutation","useQuery","REMOVE_ITEM_MUTATION","ALL_ITEMS_QUERY","List","ListItem","SimpleGrid","Heading","Item","GroceryList","data","loading","error","update","cache","deleteItem","readQuery","query","nodes","items","id","item","writeQuery","filter","node","deleteRes","handleClick","variables","input","message","console","log","length","map","product","quantity"],"mappings":"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","sourcesContent":["// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\n// Helpers\nimport { REMOVE_ITEM_MUTATION } from '../lib/mutations';\nimport { ALL_ITEMS_QUERY } from '../lib/queries';\n\n// Styles\nimport { List, ListItem, SimpleGrid, Heading } from '@chakra-ui/core';\n\n// Components\nimport Item from './Item';\n\nconst GroceryList = () => {\n  const { data, loading, error } = useQuery(ALL_ITEMS_QUERY);\n  const [deleteItem, deleteRes] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, { data: { deleteItem } }) {\n      const {\n        items: { nodes }\n      } = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\n      const { id } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: { items: { nodes: nodes.filter((node) => node.id !== id) } }\n      });\n    }\n  });\n\n  const handleClick = (id) => {\n    deleteItem({ variables: { input: { id } } });\n  };\n\n  if (error) return <p>Error: {error.message}</p>;\n\n  console.log(data)\n  console.log(data)\n\n  if (!loading && data.items && data.items.length > 0) {\n    return (\n      <List width=\"60%\" maxWidth=\"500px\" minWidth=\"300px\" margin=\"auto\">\n        <ListItem paddingBottom=\"0.5rem\">\n          <SimpleGrid columns=\"3\">\n            <Heading as=\"h4\" size=\"lg\">\n              Item\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              Quantity\n            </Heading>\n          </SimpleGrid>\n        </ListItem>\n        {data.items.map((item) => (\n          <Item\n            key={item.id + item.product}\n            id={item.id}\n            product={item.product}\n            quantity={item.quantity}\n            handleClick={handleClick}\n          />\n        ))}\n      </List>\n    );\n  } else {\n    return (\n      <Heading as=\"h4\" size=\"lg\">\n        No groceries.\n      </Heading>\n    );\n  }\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}