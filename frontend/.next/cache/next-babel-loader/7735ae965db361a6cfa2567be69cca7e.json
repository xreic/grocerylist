{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\SignInForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Flex, InputGroup, InputRightElement, SimpleGrid, Stack, Text } from '@chakra-ui/core'; // Styles\n\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput } from './styles/styled'; // Helpers\n\nimport { REGISTER_USER_MUTATION } from '../lib/mutations';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef(''); // Hooks\n\n  const {\n    0: status,\n    1: setStatus\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: showPassword,\n    1: setShow\n  } = useState(false);\n  const {\n    0: registering,\n    1: setRegistering\n  } = useState(false); // Apollo\n\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n\n  const toggleRegister = () => {\n    setShow(!showPassword);\n  };\n\n  const handleSubmit = async e => {\n    setStatus(true);\n    e.preventDefault();\n\n    if (registering) {\n      // const input = {\n      //   email: emailRef.current.value,\n      //   displayname: nameRef.current.value,\n      //   password: passwordRef.current.value,\n      //   confirmpassword: passwordConfirmationRef.current.value\n      // };\n      const input = {\n        email: 'test@gmail.com',\n        displayname: 'Test User',\n        password: '123',\n        confirmpassword: '1234'\n      };\n\n      try {\n        await register({\n          variables: {\n            input\n          }\n        });\n      } catch (error) {\n        setError;\n        setError(error);\n        console.log(error.message);\n      }\n    }\n\n    setStatus(false);\n  };\n\n  return __jsx(Stack, {\n    spacing: \"2rem\",\n    paddingBottom: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    ref: emailRef,\n    isDisabled: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), registering && __jsx(StyledInput, {\n    type: \"text\",\n    placeholder: \"Enter display name\",\n    ref: nameRef,\n    isDisabled: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), __jsx(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(StyledInput, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Enter password\",\n    ref: passwordRef,\n    isDisabled: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: toggleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, showPassword ? 'Hide' : 'Show'))), registering && __jsx(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Confirm password\",\n    ref: passwordConfirmationRef,\n    isDisabled: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: toggleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, showPassword ? 'Hide' : 'Show'))), __jsx(SimpleGrid, {\n    columns: \"2\",\n    gridGap: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(StyledButton, {\n    variantColor: \"blue\",\n    icon: registering ? AiOutlineDoubleLeft : AiOutlineForm,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Register for an account\",\n    onClick: () => setRegistering(!registering),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: FiLogIn,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Log into your account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/SignInForm.js"],"names":["useRef","useState","useMutation","Button","Flex","InputGroup","InputRightElement","SimpleGrid","Stack","Text","AiOutlineForm","AiOutlineDoubleLeft","FiLogIn","StyledButton","StyledInput","REGISTER_USER_MUTATION","SignInForm","emailRef","nameRef","passwordRef","passwordConfirmationRef","status","setStatus","error","setError","showPassword","setShow","registering","setRegistering","register","registerRes","toggleRegister","handleSubmit","e","preventDefault","input","email","displayname","password","confirmpassword","variables","console","log","message"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  Button,\n  Flex,\n  InputGroup,\n  InputRightElement,\n  SimpleGrid,\n  Stack,\n  Text\n} from '@chakra-ui/core';\n\n// Styles\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput } from './styles/styled';\n\n// Helpers\nimport { REGISTER_USER_MUTATION } from '../lib/mutations';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef('');\n\n  // Hooks\n  const [status, setStatus] = useState(false);\n  const [error, setError] = useState('');\n  const [showPassword, setShow] = useState(false);\n  const [registering, setRegistering] = useState(false);\n\n  // Apollo\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n\n  const toggleRegister = () => {\n    setShow(!showPassword);\n  };\n\n  const handleSubmit = async (e) => {\n    setStatus(true);\n    e.preventDefault();\n\n    if (registering) {\n      // const input = {\n      //   email: emailRef.current.value,\n      //   displayname: nameRef.current.value,\n      //   password: passwordRef.current.value,\n      //   confirmpassword: passwordConfirmationRef.current.value\n      // };\n\n      const input = {\n        email: 'test@gmail.com',\n        displayname: 'Test User',\n        password: '123',\n        confirmpassword: '1234'\n      };\n\n      try {\n        await register({ variables: { input } });\n      } catch (error) {\n        setError\n        setError(error);\n        console.log(error.message);\n      }\n    }\n\n    setStatus(false);\n  };\n\n  return (\n    <Stack spacing=\"2rem\" paddingBottom=\"2rem\">\n      <Flex justify=\"center\">\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <StyledInput\n            type=\"email\"\n            placeholder=\"Enter email\"\n            ref={emailRef}\n            isDisabled={status}\n          />\n\n          {registering && (\n            <StyledInput\n              type=\"text\"\n              placeholder=\"Enter display name\"\n              ref={nameRef}\n              isDisabled={status}\n            />\n          )}\n\n          <InputGroup size=\"md\">\n            <StyledInput\n              pr=\"4.5rem\"\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              ref={passwordRef}\n              isDisabled={status}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleRegister}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          {registering && (\n            <InputGroup size=\"md\">\n              <StyledInput\n                pr=\"4.5rem\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Confirm password\"\n                ref={passwordConfirmationRef}\n                isDisabled={status}\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={toggleRegister}>\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          )}\n\n          <SimpleGrid columns=\"2\" gridGap=\"5px\">\n            <StyledButton\n              variantColor=\"blue\"\n              icon={registering ? AiOutlineDoubleLeft : AiOutlineForm}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Register for an account\"\n              onClick={() => setRegistering(!registering)}\n            />\n            <StyledButton\n              type=\"submit\"\n              variantColor=\"blue\"\n              icon={FiLogIn}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Log into your account\"\n            />\n          </SimpleGrid>\n        </form>\n        {/* {error !== '' && <Text>{error}</Text>} */}\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}