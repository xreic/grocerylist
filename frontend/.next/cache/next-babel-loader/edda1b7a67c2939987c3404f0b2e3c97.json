{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependnencies\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport { useMutation, useQuery } from '@apollo/react-hooks'; // Helpers\n\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations';\nimport { doctorError } from '../lib/doctorError'; // Styles\n\nimport { Heading, Skeleton, SimpleGrid, Stack, useToast } from '@chakra-ui/core'; // Components\n\nimport Item from './Item';\n\nvar GroceryList = function GroceryList() {\n  _s();\n\n  var _data$currentUser;\n\n  // Hooks\n  var toast = useToast(); // Apollo\n\n  var _useQuery = useQuery(USERS_ITEMS_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(REMOVE_ITEM_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteItem = _useMutation2[0],\n      deleteResponse = _useMutation2[1]; // UseEffect\n\n\n  useEffect(function () {\n    Router;\n  }, []); // Handlers\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return deleteItem({\n                variables: {\n                  input: {\n                    id: id\n                  }\n                },\n                optimisticResponse: {\n                  __typename: 'Mutation',\n                  deleteItem: {\n                    item: {\n                      id: id\n                    }\n                  }\n                },\n                update: function update(cache, _ref2) {\n                  var deleteItem = _ref2.data.deleteItem;\n\n                  var _cache$readQuery = cache.readQuery({\n                    query: USERS_ITEMS_QUERY\n                  }),\n                      currentUser = _cache$readQuery.currentUser;\n\n                  var nodes = currentUser.itemsByOwnerId.nodes;\n                  var id = deleteItem.item.id;\n                  cache.writeQuery({\n                    query: USERS_ITEMS_QUERY,\n                    data: {\n                      currentUser: {\n                        itemsByOwnerId: {\n                          nodes: nodes.filter(function (node) {\n                            return node.id !== id;\n                          })\n                        }\n                      }\n                    }\n                  });\n                }\n              });\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function handleClick(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (error || deleteResponse.error) {\n    if (!!error) {\n      toast({\n        description: error,\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n\n    if (!!deleteResponse.error) {\n      toast({\n        description: doctorError(deleteResponse.error.message),\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n  }\n\n  if (loading) return __jsx(Stack, {\n    width: \"60%\",\n    maxWidth: \"500px\",\n    minWidth: \"300px\",\n    margin: \"auto\",\n    spacing: \"0.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    as: \"h4\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Loading\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"));\n\n  if ((_data$currentUser = data.currentUser) === null || _data$currentUser === void 0 ? void 0 : _data$currentUser.itemsByOwnerId.nodes.length) {\n    var list = data.currentUser.itemsByOwnerId.nodes;\n    return __jsx(Stack, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      spacing: \"0.5rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Item\"), __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Quantity\")), __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, list.map(function (item) {\n      return __jsx(Item, {\n        key: item.id + item.product,\n        id: item.id,\n        product: item.product,\n        quantity: item.quantity,\n        handleClick: handleClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      });\n    })));\n  } else {\n    return __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, \"Remember to add to your list. \\uD83D\\uDCDD\");\n  }\n};\n\n_s(GroceryList, \"kytFAU8fEzrict8j3IilxWsMALw=\", false, function () {\n  return [useToast, useQuery, useMutation];\n});\n\n_c = GroceryList;\nexport default GroceryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useEffect","Router","useMutation","useQuery","USERS_ITEMS_QUERY","REMOVE_ITEM_MUTATION","doctorError","Heading","Skeleton","SimpleGrid","Stack","useToast","Item","GroceryList","toast","data","loading","error","deleteItem","deleteResponse","handleClick","id","variables","input","optimisticResponse","__typename","item","update","cache","readQuery","query","currentUser","nodes","itemsByOwnerId","writeQuery","filter","node","description","status","duration","isClosable","message","length","list","map","product","quantity"],"mappings":"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","sourcesContent":["// Dependnencies\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\n// Helpers\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations';\nimport { doctorError } from '../lib/doctorError';\n\n// Styles\nimport {\n  Heading,\n  Skeleton,\n  SimpleGrid,\n  Stack,\n  useToast\n} from '@chakra-ui/core';\n\n// Components\nimport Item from './Item';\n\nconst GroceryList = () => {\n  // Hooks\n  const toast = useToast();\n\n  // Apollo\n  const { data, loading, error } = useQuery(USERS_ITEMS_QUERY);\n  const [deleteItem, deleteResponse] = useMutation(REMOVE_ITEM_MUTATION);\n\n  // UseEffect\n  useEffect(() => {\n    Router;\n  }, []);\n\n  // Handlers\n  const handleClick = async (id) => {\n    try {\n      await deleteItem({\n        variables: { input: { id } },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deleteItem: {\n            item: { id }\n          }\n        },\n        update: (cache, { data: { deleteItem } }) => {\n          const { currentUser } = cache.readQuery({ query: USERS_ITEMS_QUERY });\n          const { nodes } = currentUser.itemsByOwnerId;\n          const { id } = deleteItem.item;\n\n          cache.writeQuery({\n            query: USERS_ITEMS_QUERY,\n            data: {\n              currentUser: {\n                itemsByOwnerId: {\n                  nodes: nodes.filter((node) => node.id !== id)\n                }\n              }\n            }\n          });\n        }\n      });\n    } catch (error) {\n      // need to catch the error, so a popup doesn't show up\n    }\n  };\n\n  if (error || deleteResponse.error) {\n    if (!!error) {\n      toast({\n        description: error,\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n\n    if (!!deleteResponse.error) {\n      toast({\n        description: doctorError(deleteResponse.error.message),\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n  }\n\n  if (loading)\n    return (\n      <Stack\n        width=\"60%\"\n        maxWidth=\"500px\"\n        minWidth=\"300px\"\n        margin=\"auto\"\n        spacing=\"0.5rem\"\n      >\n        <Heading as=\"h4\" size=\"lg\">\n          Loading\n        </Heading>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n      </Stack>\n    );\n\n  if (data.currentUser?.itemsByOwnerId.nodes.length) {\n    const list = data.currentUser.itemsByOwnerId.nodes;\n\n    return (\n      <Stack\n        width=\"60%\"\n        maxWidth=\"500px\"\n        minWidth=\"300px\"\n        margin=\"auto\"\n        spacing=\"0.5rem\"\n      >\n        <SimpleGrid columns=\"3\">\n          <Heading as=\"h4\" size=\"lg\">\n            Item\n          </Heading>\n          <Heading as=\"h4\" size=\"lg\">\n            Quantity\n          </Heading>\n        </SimpleGrid>\n        <SimpleGrid columns=\"3\">\n          {list.map((item) => (\n            <Item\n              key={item.id + item.product}\n              id={item.id}\n              product={item.product}\n              quantity={item.quantity}\n              handleClick={handleClick}\n            />\n          ))}\n        </SimpleGrid>\n      </Stack>\n    );\n  } else {\n    return (\n      <Heading as=\"h4\" size=\"lg\">\n        Remember to add to your list. 📝\n      </Heading>\n    );\n  }\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}