{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 50%;\\n  margin: auto;\\n  text-align: center;\\n  img {\\n    display: inline;\\n  }\\n  ul {\\n    padding-left: 0px;\\n    list-style-type: none;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: Arial, Helvetica, sans-serif;\\n  background-color: honeydew;\\n  color: seagreen;\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// Dependencies\nimport { cloneElement } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from '@emotion/styled'; // Helpers\n\nimport { ALL_ITEMS_QUERY } from '../lib/queries'; // Styles\n\nvar Global = styled.div(_templateObject());\nvar Layout = styled.div(_templateObject2()); // Components\n\nimport Meta from './Meta';\nimport Header from './Header';\n\nvar Page = function Page(props) {\n  var _data$items;\n\n  var _useQuery = useQuery(ALL_ITEMS_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return __jsx(Global, null, __jsx(Layout, null, __jsx(Meta, null), __jsx(Header, null), (data === null || data === void 0 ? void 0 : (_data$items = data.items) === null || _data$items === void 0 ? void 0 : _data$items.nodes) ? cloneElement(props.children, {\n    items: data.items.nodes,\n    loading: loading,\n    error: error\n  }) : props.children));\n};\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}