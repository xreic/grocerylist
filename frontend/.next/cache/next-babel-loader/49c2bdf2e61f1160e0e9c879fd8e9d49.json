{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks'; // Helpers\n\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations';\nimport { doctorError } from '../lib/doctorError'; // Styles\n\nimport { Box, Heading, SimpleGrid, Stack, useToast } from '@chakra-ui/core'; // Components\n\nimport Item from './Item';\nimport Loading from './Loading';\n\nconst GroceryList = () => {\n  var _data$currentUserItem;\n\n  // Hooks\n  const toast = useToast(); // Apollo\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(USERS_ITEMS_QUERY);\n  const [deleteItem, deleteResponse] = useMutation(REMOVE_ITEM_MUTATION); // Handlers\n\n  const handleClick = async id => {\n    try {\n      await deleteItem({\n        variables: {\n          input: {\n            id\n          }\n        },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deleteItem: {\n            item: {\n              id\n            }\n          }\n        },\n        update: (cache, {\n          data: {\n            deleteItem\n          }\n        }) => {\n          const {\n            currentUserItems\n          } = cache.readQuery({\n            query: USERS_ITEMS_QUERY\n          });\n          const {\n            nodes\n          } = currentUserItems;\n          const {\n            id\n          } = deleteItem.item;\n          cache.writeQuery({\n            query: USERS_ITEMS_QUERY,\n            data: {\n              currentUserItems: {\n                nodes: nodes.filter(node => node.id !== id)\n              }\n            }\n          });\n        }\n      });\n    } catch (error) {// need to catch the error, so a popup doesn't show up\n    }\n  };\n\n  if (error || deleteResponse.error) {\n    if (!!error) {\n      toast({\n        description: error,\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n\n    if (!!deleteResponse.error) {\n      toast({\n        description: doctorError(deleteResponse.error.message),\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n  }\n\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }\n  });\n\n  if ((_data$currentUserItem = data.currentUserItems) === null || _data$currentUserItem === void 0 ? void 0 : _data$currentUserItem.nodes.length) {\n    const list = data.currentUserItems.nodes;\n    return __jsx(Stack, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      spacing: \"0.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Item\"), __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Quantity\")), __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, list.map(item => __jsx(Item, {\n      key: item.id + item.product,\n      id: item.id,\n      product: item.product,\n      quantity: item.quantity,\n      handleClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }))));\n  } else {\n    return __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, \"Remember to add to your list. \\uD83D\\uDCDD\");\n  }\n};\n\nexport default GroceryList;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useMutation","useQuery","USERS_ITEMS_QUERY","REMOVE_ITEM_MUTATION","doctorError","Box","Heading","SimpleGrid","Stack","useToast","Item","Loading","GroceryList","toast","data","loading","error","deleteItem","deleteResponse","handleClick","id","variables","input","optimisticResponse","__typename","item","update","cache","currentUserItems","readQuery","query","nodes","writeQuery","filter","node","description","status","duration","isClosable","message","length","list","map","product","quantity"],"mappings":"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","sourcesContent":["// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\n// Helpers\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations';\nimport { doctorError } from '../lib/doctorError';\n\n// Styles\nimport { Box, Heading, SimpleGrid, Stack, useToast } from '@chakra-ui/core';\n\n// Components\nimport Item from './Item';\nimport Loading from './Loading';\n\nconst GroceryList = () => {\n  // Hooks\n  const toast = useToast();\n\n  // Apollo\n  const { data, loading, error } = useQuery(USERS_ITEMS_QUERY);\n  const [deleteItem, deleteResponse] = useMutation(REMOVE_ITEM_MUTATION);\n\n  // Handlers\n  const handleClick = async (id) => {\n    try {\n      await deleteItem({\n        variables: { input: { id } },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          deleteItem: {\n            item: { id }\n          }\n        },\n        update: (cache, { data: { deleteItem } }) => {\n          const { currentUserItems } = cache.readQuery({\n            query: USERS_ITEMS_QUERY\n          });\n          const { nodes } = currentUserItems;\n          const { id } = deleteItem.item;\n\n          cache.writeQuery({\n            query: USERS_ITEMS_QUERY,\n            data: {\n              currentUserItems: {\n                nodes: nodes.filter((node) => node.id !== id)\n              }\n            }\n          });\n        }\n      });\n    } catch (error) {\n      // need to catch the error, so a popup doesn't show up\n    }\n  };\n\n  if (error || deleteResponse.error) {\n    if (!!error) {\n      toast({\n        description: error,\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n\n    if (!!deleteResponse.error) {\n      toast({\n        description: doctorError(deleteResponse.error.message),\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n  }\n\n  if (loading) return <Loading />;\n\n  if (data.currentUserItems?.nodes.length) {\n    const list = data.currentUserItems.nodes;\n\n    return (\n      <Stack\n        width=\"60%\"\n        maxWidth=\"500px\"\n        minWidth=\"300px\"\n        margin=\"auto\"\n        spacing=\"0.5rem\"\n      >\n        <SimpleGrid columns=\"3\">\n          <Heading as=\"h4\" size=\"lg\">\n            Item\n          </Heading>\n          <Heading as=\"h4\" size=\"lg\">\n            Quantity\n          </Heading>\n        </SimpleGrid>\n        <Box>\n          {list.map((item) => (\n            <Item\n              key={item.id + item.product}\n              id={item.id}\n              product={item.product}\n              quantity={item.quantity}\n              handleClick={handleClick}\n            />\n          ))}\n        </Box>\n      </Stack>\n    );\n  } else {\n    return (\n      <Heading as=\"h4\" size=\"lg\">\n        Remember to add to your list. 📝\n      </Heading>\n    );\n  }\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}