{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryCheckout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks'; // Styles\n\nimport { Button } from '@chakra-ui/core'; // Apollo\n\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { ADD_TO_HISTORY_MUTATION } from '../lib/apollo/mutations'; // React\n\nimport { StatusContext } from '../lib/React/StatusContext';\n\nvar GroceryCheckout = function GroceryCheckout() {\n  _s();\n\n  // Hooks + Contexts\n  var _useState = useState(false),\n      isCalling = _useState[0],\n      setIsCalling = _useState[1];\n\n  var _useContext = useContext(StatusContext),\n      status = _useContext.status; // Apollo\n\n\n  var _useMutation = useMutation(ADD_TO_HISTORY_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToHistory = _useMutation2[0],\n      addToHistoryResponse = _useMutation2[1]; // Handlers\n\n\n  var handleCheckout = function handleCheckout() {\n    setIsCalling(true);\n    console.log(status);\n    addToHistory({\n      variables: {\n        input: status\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addToHistory: {\n          history: {\n            status: status\n          }\n        }\n      },\n      update: function update(cache, _ref) {\n        var addItem = _ref.data.addItem;\n\n        var _cache$readQuery = cache.readQuery({\n          query: USERS_ITEMS_QUERY\n        }),\n            currentUserItems = _cache$readQuery.currentUserItems;\n\n        var nodes = currentUserItems.nodes;\n        var item = addItem.item;\n        cache.writeQuery({\n          query: USERS_ITEMS_QUERY,\n          data: {\n            currentUserItems: {\n              nodes: [item].concat(_toConsumableArray(nodes))\n            }\n          }\n        });\n      }\n    });\n    setIsCalling(false);\n  };\n\n  return __jsx(Button, {\n    variantColor: \"blue\",\n    alignSelf: \"center\",\n    width: \"35%\",\n    maxWidth: \"300px\",\n    marginBottom: \"2rem\",\n    onClick: handleCheckout,\n    isLoading: isCalling,\n    isDisabled: isCalling,\n    \"aira-busy\": isCalling,\n    \"aria-label\": \"Checkout the selected items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"Checkout\");\n};\n\n_s(GroceryCheckout, \"ai8wT5f5Ek8Cps7Apcs+NV74YMs=\", false, function () {\n  return [useMutation];\n});\n\n_c = GroceryCheckout;\nexport default GroceryCheckout;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryCheckout\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryCheckout.js"],"names":["useContext","useState","useMutation","Button","USERS_ITEMS_QUERY","ADD_TO_HISTORY_MUTATION","StatusContext","GroceryCheckout","isCalling","setIsCalling","status","addToHistory","addToHistoryResponse","handleCheckout","console","log","variables","input","optimisticResponse","__typename","history","update","cache","addItem","data","readQuery","query","currentUserItems","nodes","item","writeQuery"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,qBAA5B,C,CAEA;;AACA,SAASC,MAAT,QAAuB,iBAAvB,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,uBAAT,QAAwC,yBAAxC,C,CAEA;;AACA,SAASC,aAAT,QAA8B,4BAA9B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA;;AAC5B;AAD4B,kBAEMN,QAAQ,CAAC,KAAD,CAFd;AAAA,MAErBO,SAFqB;AAAA,MAEVC,YAFU;;AAAA,oBAGTT,UAAU,CAACM,aAAD,CAHD;AAAA,MAGpBI,MAHoB,eAGpBA,MAHoB,EAK5B;;;AAL4B,qBAMiBR,WAAW,CACtDG,uBADsD,CAN5B;AAAA;AAAA,MAMrBM,YANqB;AAAA,MAMPC,oBANO,qBAU5B;;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AAEAC,IAAAA,YAAY,CAAC;AACXK,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEP;AAAT,OADA;AAGXQ,MAAAA,kBAAkB,EAAE;AAClBC,QAAAA,UAAU,EAAE,UADM;AAElBR,QAAAA,YAAY,EAAE;AACZS,UAAAA,OAAO,EAAE;AAAEV,YAAAA,MAAM,EAANA;AAAF;AADG;AAFI,OAHT;AAUXW,MAAAA,MAAM,EAAE,gBAACC,KAAD,QAAkC;AAAA,YAAhBC,OAAgB,QAAxBC,IAAwB,CAAhBD,OAAgB;;AAAA,+BACXD,KAAK,CAACG,SAAN,CAAgB;AAC3CC,UAAAA,KAAK,EAAEtB;AADoC,SAAhB,CADW;AAAA,YAChCuB,gBADgC,oBAChCA,gBADgC;;AAAA,YAIhCC,KAJgC,GAItBD,gBAJsB,CAIhCC,KAJgC;AAAA,YAKhCC,IALgC,GAKvBN,OALuB,CAKhCM,IALgC;AAOxCP,QAAAA,KAAK,CAACQ,UAAN,CAAiB;AACfJ,UAAAA,KAAK,EAAEtB,iBADQ;AAEfoB,UAAAA,IAAI,EAAE;AAAEG,YAAAA,gBAAgB,EAAE;AAAEC,cAAAA,KAAK,GAAGC,IAAH,4BAAYD,KAAZ;AAAP;AAApB;AAFS,SAAjB;AAID;AArBU,KAAD,CAAZ;AAwBAnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA9BD;;AAgCA,SACE,MAAC,MAAD;AACE,IAAA,YAAY,EAAC,MADf;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,KAAK,EAAC,KAHR;AAIE,IAAA,QAAQ,EAAC,OAJX;AAKE,IAAA,YAAY,EAAC,MALf;AAME,IAAA,OAAO,EAAEI,cANX;AAOE,IAAA,SAAS,EAAEL,SAPb;AAQE,IAAA,UAAU,EAAEA,SARd;AASE,iBAAWA,SATb;AAUE,+CAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD,CA3DD;;GAAMD,e;UAMyCL,W;;;KANzCK,e;AA6DN,eAAeA,eAAf","sourcesContent":["// Dependencies\nimport { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\n\n// Styles\nimport { Button } from '@chakra-ui/core';\n\n// Apollo\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { ADD_TO_HISTORY_MUTATION } from '../lib/apollo/mutations';\n\n// React\nimport { StatusContext } from '../lib/React/StatusContext';\n\nconst GroceryCheckout = () => {\n  // Hooks + Contexts\n  const [isCalling, setIsCalling] = useState(false);\n  const { status } = useContext(StatusContext);\n\n  // Apollo\n  const [addToHistory, addToHistoryResponse] = useMutation(\n    ADD_TO_HISTORY_MUTATION\n  );\n\n  // Handlers\n  const handleCheckout = () => {\n    setIsCalling(true);\n\n    console.log(status);\n\n    addToHistory({\n      variables: { input: status },\n\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addToHistory: {\n          history: { status }\n        }\n      },\n\n      update: (cache, { data: { addItem } }) => {\n        const { currentUserItems } = cache.readQuery({\n          query: USERS_ITEMS_QUERY\n        });\n        const { nodes } = currentUserItems;\n        const { item } = addItem;\n\n        cache.writeQuery({\n          query: USERS_ITEMS_QUERY,\n          data: { currentUserItems: { nodes: [item, ...nodes] } }\n        });\n      }\n    });\n\n    setIsCalling(false);\n  };\n\n  return (\n    <Button\n      variantColor=\"blue\"\n      alignSelf=\"center\"\n      width=\"35%\"\n      maxWidth=\"300px\"\n      marginBottom=\"2rem\"\n      onClick={handleCheckout}\n      isLoading={isCalling}\n      isDisabled={isCalling}\n      aira-busy={isCalling}\n      aria-label={`Checkout the selected items`}\n    >\n      Checkout\n    </Button>\n  );\n};\n\nexport default GroceryCheckout;\n"]},"metadata":{},"sourceType":"module"}