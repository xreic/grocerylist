{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ALL_POSTS_QUERY, allPostsQueryVars } from './PostList';\nvar CREATE_POST_MUTATION = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"OperationDefinition\",\n    \"operation\": \"mutation\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"createPost\"\n    },\n    \"variableDefinitions\": [{\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"title\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NonNullType\",\n        \"type\": {\n          \"kind\": \"NamedType\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"String\"\n          }\n        }\n      },\n      \"directives\": []\n    }, {\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"url\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NonNullType\",\n        \"type\": {\n          \"kind\": \"NamedType\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"String\"\n          }\n        }\n      },\n      \"directives\": []\n    }],\n    \"directives\": [],\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"createPost\"\n        },\n        \"arguments\": [{\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"title\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"title\"\n            }\n          }\n        }, {\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"url\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"url\"\n            }\n          }\n        }],\n        \"directives\": [],\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"id\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"title\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"votes\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"url\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"createdAt\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }]\n        }\n      }]\n    }\n  }],\n  \"loc\": {\n    \"start\": 0,\n    \"end\": 169,\n    \"source\": {\n      \"body\": \"\\n  mutation createPost($title: String!, $url: String!) {\\n    createPost(title: $title, url: $url) {\\n      id\\n      title\\n      votes\\n      url\\n      createdAt\\n    }\\n  }\\n\",\n      \"name\": \"GraphQL request\",\n      \"locationOffset\": {\n        \"line\": 1,\n        \"column\": 1\n      }\n    }\n  }\n};\nexport default function Submit() {\n  var _useMutation = useMutation(CREATE_POST_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createPost = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var form = event.target;\n    var formData = new window.FormData(form);\n    var title = formData.get('title');\n    var url = formData.get('url');\n    form.reset();\n    createPost({\n      variables: {\n        title: title,\n        url: url\n      },\n      update: function update(proxy, _ref) {\n        var createPost = _ref.data.createPost;\n        var data = proxy.readQuery({\n          query: ALL_POSTS_QUERY,\n          variables: allPostsQueryVars\n        }); // Update the cache with the new post at the top of the\n\n        proxy.writeQuery({\n          query: ALL_POSTS_QUERY,\n          data: _objectSpread(_objectSpread({}, data), {}, {\n            allPosts: [createPost].concat(_toConsumableArray(data.allPosts))\n          }),\n          variables: allPostsQueryVars\n        });\n      }\n    });\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jsx-4286934451\"\n  }, __jsx(\"h1\", {\n    className: \"jsx-4286934451\"\n  }, \"Submit\"), __jsx(\"input\", {\n    placeholder: \"title\",\n    name: \"title\",\n    type: \"text\",\n    required: true,\n    className: \"jsx-4286934451\"\n  }), __jsx(\"input\", {\n    placeholder: \"url\",\n    name: \"url\",\n    type: \"url\",\n    required: true,\n    className: \"jsx-4286934451\"\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    className: \"jsx-4286934451\"\n  }, \"Submit\"), __jsx(_JSXStyle, {\n    id: \"4286934451\"\n  }, [\"form.jsx-4286934451{border-bottom:1px solid #ececec;padding-bottom:20px;margin-bottom:20px;}\", \"h1.jsx-4286934451{font-size:20px;}\", \"input.jsx-4286934451{display:block;margin-bottom:10px;}\"]));\n}","map":null,"metadata":{},"sourceType":"module"}