{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nvar UPDATE_POST_MUTATION = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"OperationDefinition\",\n    \"operation\": \"mutation\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"updatePost\"\n    },\n    \"variableDefinitions\": [{\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"id\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NonNullType\",\n        \"type\": {\n          \"kind\": \"NamedType\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"ID\"\n          }\n        }\n      },\n      \"directives\": []\n    }, {\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"votes\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NamedType\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"Int\"\n        }\n      },\n      \"directives\": []\n    }],\n    \"directives\": [],\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"updatePost\"\n        },\n        \"arguments\": [{\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"id\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"id\"\n            }\n          }\n        }, {\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"votes\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"votes\"\n            }\n          }\n        }],\n        \"directives\": [],\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"__typename\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"id\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"votes\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }]\n        }\n      }]\n    }\n  }],\n  \"loc\": {\n    \"start\": 0,\n    \"end\": 137,\n    \"source\": {\n      \"body\": \"\\n  mutation updatePost($id: ID!, $votes: Int) {\\n    updatePost(id: $id, votes: $votes) {\\n      __typename\\n      id\\n      votes\\n    }\\n  }\\n\",\n      \"name\": \"GraphQL request\",\n      \"locationOffset\": {\n        \"line\": 1,\n        \"column\": 1\n      }\n    }\n  }\n};\nexport default function PostUpvoter(_ref) {\n  var votes = _ref.votes,\n      id = _ref.id;\n\n  var _useMutation = useMutation(UPDATE_POST_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updatePost = _useMutation2[0];\n\n  var upvotePost = function upvotePost() {\n    updatePost({\n      variables: {\n        id: id,\n        votes: votes + 1\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updatePost: {\n          __typename: 'Post',\n          id: id,\n          votes: votes + 1\n        }\n      }\n    });\n  };\n\n  return __jsx(\"button\", {\n    onClick: function onClick() {\n      return upvotePost();\n    },\n    className: \"jsx-852540806\"\n  }, votes, __jsx(_JSXStyle, {\n    id: \"852540806\"\n  }, [\"button.jsx-852540806{background-color:transparent;border:1px solid #e4e4e4;color:#000;}\", \"button.jsx-852540806:active{background-color:transparent;}\", \"button.jsx-852540806:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-color:transparent transparent #000000 transparent;border-style:solid;border-width:0 4px 6px 4px;content:'';height:0;margin-right:5px;width:0;}\"]));\n}","map":null,"metadata":{},"sourceType":"module"}