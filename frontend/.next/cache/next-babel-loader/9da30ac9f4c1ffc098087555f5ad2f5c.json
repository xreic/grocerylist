{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nexport default function createApolloClient(initialState, ctx) {\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  const windowGlobal = false && window;\n  console.log(windowGlobal === null || windowGlobal === void 0 ? void 0 : windowGlobal.localStorage.getItem('token'));\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: new HttpLink({\n      includeExtensions: true,\n      uri: 'http://localhost:4000/',\n      // Server URL (must be absolute)\n      credentials: 'same-origin' // Additional fetch() options like `credentials` or `headers`\n\n    }),\n    cache: new InMemoryCache({\n      addTypename: false\n    })\n  });\n}","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/apolloClient.js"],"names":["ApolloClient","InMemoryCache","HttpLink","createApolloClient","initialState","ctx","windowGlobal","window","console","log","localStorage","getItem","ssrMode","Boolean","link","includeExtensions","uri","credentials","cache","addTypename"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,GAA1C,EAA+C;AAC5D;AACA;AAEA,QAAMC,YAAY,GAAG,SAAiCC,MAAtD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,aAAYA,YAAZ,uBAAYA,YAAY,CAAEI,YAAd,CAA2BC,OAA3B,CAAmC,OAAnC,CAAZ;AAEA,SAAO,IAAIX,YAAJ,CAAiB;AACtBY,IAAAA,OAAO,EAAEC,OAAO,CAACR,GAAD,CADM;AAEtBS,IAAAA,IAAI,EAAE,IAAIZ,QAAJ,CAAa;AACjBa,MAAAA,iBAAiB,EAAE,IADF;AAEjBC,MAAAA,GAAG,EAAE,wBAFY;AAEc;AAC/BC,MAAAA,WAAW,EAAE,aAHI,CAGU;;AAHV,KAAb,CAFgB;AAOtBC,IAAAA,KAAK,EAAE,IAAIjB,aAAJ,CAAkB;AACvBkB,MAAAA,WAAW,EAAE;AADU,KAAlB;AAPe,GAAjB,CAAP;AAWD","sourcesContent":["import { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\n\r\nexport default function createApolloClient(initialState, ctx) {\r\n  // The `ctx` (NextPageContext) will only be present on the server.\r\n  // use it to extract auth headers (ctx.req) or similar.\r\n\r\n  const windowGlobal = typeof window !== 'undefined' && window;\r\n  console.log(windowGlobal?.localStorage.getItem('token'));\r\n\r\n  return new ApolloClient({\r\n    ssrMode: Boolean(ctx),\r\n    link: new HttpLink({\r\n      includeExtensions: true,\r\n      uri: 'http://localhost:4000/', // Server URL (must be absolute)\r\n      credentials: 'same-origin' // Additional fetch() options like `credentials` or `headers`\r\n    }),\r\n    cache: new InMemoryCache({\r\n      addTypename: false\r\n    })\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}