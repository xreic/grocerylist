{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { ALL_ITEMS_QUERY } from '../lib/queries';\nimport { List } from '@chakra-ui/core';\nimport Item from './Item';\n\nconst GroceryList = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALL_ITEMS_QUERY);\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, \"Error: \", error);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 23\n    }\n  }, \"Loading\");\n  const items = data.items.nodes;\n  return __jsx(List, {\n    width: \"60%\",\n    margin: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, items.map(item => __jsx(Item, {\n    key: item.id,\n    id: item.id,\n    product: item.product,\n    quantity: item.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default GroceryList;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useQuery","useMutation","ALL_ITEMS_QUERY","List","Item","GroceryList","data","loading","error","items","nodes","map","item","id","product","quantity"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACE,eAAD,CAAzC;AAEA,MAAIM,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAX,CAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAEb,QAAME,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAWC,KAAzB;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,KAAZ;AAAkB,IAAA,MAAM,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,IACT,MAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,EAAE,EAAED,IAAI,CAACC,EAFX;AAGE,IAAA,OAAO,EAAED,IAAI,CAACE,OAHhB;AAIE,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAYD,CApBD;;AAsBA,eAAeV,WAAf","sourcesContent":["import { useQuery, useMutation } from '@apollo/react-hooks';\nimport { ALL_ITEMS_QUERY } from '../lib/queries';\nimport { List } from '@chakra-ui/core';\nimport Item from './Item';\n\nconst GroceryList = () => {\n  const { data, loading, error } = useQuery(ALL_ITEMS_QUERY);\n\n  if (error) return <p>Error: {error}</p>;\n  if (loading) return <p>Loading</p>;\n\n  const items = data.items.nodes;\n\n  return (\n    <List width=\"60%\" margin=\"auto\">\n      {items.map((item) => (\n        <Item\n          key={item.id}\n          id={item.id}\n          product={item.product}\n          quantity={item.quantity}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}