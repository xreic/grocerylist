{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useContext, useState } from 'react'; // Styles\n\nimport { Flex, IconButton, SimpleGrid, Text } from '@chakra-ui/core';\nimport { MdRemoveCircleOutline, MdLabel, MdLabelOutline } from 'react-icons/md'; // Hooks + Contexts\n\nimport { useShopping } from '../lib/React/useShopping';\nimport { StatusContext } from '../lib/React/StatusContext';\n\nvar Item = function Item(_ref) {\n  _s();\n\n  var id = _ref.id,\n      product = _ref.product,\n      quantity = _ref.quantity,\n      handleClick = _ref.handleClick;\n\n  // Hooks + Contexts\n  var _useState = useState(false),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var _useShopping = useShopping(),\n      _useShopping2 = _slicedToArray(_useShopping, 2),\n      isShopping = _useShopping2[0],\n      setIsShopping = _useShopping2[1];\n\n  var _useContext = useContext(StatusContext),\n      addToHistory = _useContext.addToHistory,\n      removeFromHistory = _useContext.removeFromHistory;\n\n  var changeStatus = function changeStatus() {\n    if (selected) removeFromHistory(id);else addToHistory(id, true);\n    setSelected(!selected);\n  };\n\n  return __jsx(SimpleGrid, {\n    columns: \"3\",\n    paddingBottom: \"0.25rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    alignSelf: \"center\",\n    as: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, product), __jsx(Text, {\n    alignSelf: \"center\",\n    as: \"b\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, quantity), __jsx(Flex, {\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, isShopping ? __jsx(IconButton, {\n    size: \"sm\",\n    variantColor: \"blue\",\n    icon: MdRemoveCircleOutline,\n    onClick: function onClick() {\n      return handleClick(id);\n    },\n    \"aria-label\": \"Click to remove from list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }) : __jsx(IconButton, {\n    size: \"sm\",\n    variantColor: \"blue\",\n    icon: selected ? MdLabel : MdLabelOutline,\n    onClick: changeStatus,\n    \"aria-label\": \"Click to select\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Item, \"AE8TDkz5RB4V+XekoS6ybYXWAfw=\", false, function () {\n  return [useShopping];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/Item.js"],"names":["useContext","useState","Flex","IconButton","SimpleGrid","Text","MdRemoveCircleOutline","MdLabel","MdLabelOutline","useShopping","StatusContext","Item","id","product","quantity","handleClick","selected","setSelected","isShopping","setIsShopping","addToHistory","removeFromHistory","changeStatus"],"mappings":";;;;;;;;AAAA;AACA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC,C,CAEA;;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,IAAvC,QAAmD,iBAAnD;AACA,SAASC,qBAAT,EAAgCC,OAAhC,EAAyCC,cAAzC,QAA+D,gBAA/D,C,CAEA;;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,aAAT,QAA8B,4BAA9B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA4C;AAAA;;AAAA,MAAzCC,EAAyC,QAAzCA,EAAyC;AAAA,MAArCC,OAAqC,QAArCA,OAAqC;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AACvD;AADuD,kBAEvBd,QAAQ,CAAC,KAAD,CAFe;AAAA,MAEhDe,QAFgD;AAAA,MAEtCC,WAFsC;;AAAA,qBAGnBR,WAAW,EAHQ;AAAA;AAAA,MAGhDS,UAHgD;AAAA,MAGpCC,aAHoC;;AAAA,oBAIXnB,UAAU,CAACU,aAAD,CAJC;AAAA,MAI/CU,YAJ+C,eAI/CA,YAJ+C;AAAA,MAIjCC,iBAJiC,eAIjCA,iBAJiC;;AAMvD,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIN,QAAJ,EAAcK,iBAAiB,CAACT,EAAD,CAAjB,CAAd,KACKQ,YAAY,CAACR,EAAD,EAAK,IAAL,CAAZ;AAELK,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GALD;;AAOA,SACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,GAApB;AAAwB,IAAA,aAAa,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OADH,CADF,EAIE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CAJF,EAOE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,UAAU,GACT,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,IAAI,EAAEZ,qBAHR;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMS,WAAW,CAACH,EAAD,CAAjB;AAAA,KAJX;AAKE,kBAAW,2BALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAST,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,IAAI,EAAEI,QAAQ,GAAGT,OAAH,GAAaC,cAH7B;AAIE,IAAA,OAAO,EAAEc,YAJX;AAKE,mCALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAPF,CADF;AA6BD,CA1CD;;GAAMX,I;UAGgCF,W;;;KAHhCE,I;AA2CN,eAAeA,IAAf","sourcesContent":["// Dependencies\nimport { useContext, useState } from 'react';\n\n// Styles\nimport { Flex, IconButton, SimpleGrid, Text } from '@chakra-ui/core';\nimport { MdRemoveCircleOutline, MdLabel, MdLabelOutline } from 'react-icons/md';\n\n// Hooks + Contexts\nimport { useShopping } from '../lib/React/useShopping';\nimport { StatusContext } from '../lib/React/StatusContext';\n\nconst Item = ({ id, product, quantity, handleClick }) => {\n  // Hooks + Contexts\n  const [selected, setSelected] = useState(false);\n  const [isShopping, setIsShopping] = useShopping();\n  const { addToHistory, removeFromHistory } = useContext(StatusContext);\n\n  const changeStatus = () => {\n    if (selected) removeFromHistory(id);\n    else addToHistory(id, true);\n\n    setSelected(!selected);\n  };\n\n  return (\n    <SimpleGrid columns=\"3\" paddingBottom=\"0.25rem\">\n      <Text alignSelf=\"center\" as=\"b\">\n        {product}\n      </Text>\n      <Text alignSelf=\"center\" as=\"b\">\n        {quantity}\n      </Text>\n      <Flex justify=\"center\">\n        {isShopping ? (\n          <IconButton\n            size=\"sm\"\n            variantColor=\"blue\"\n            icon={MdRemoveCircleOutline}\n            onClick={() => handleClick(id)}\n            aria-label=\"Click to remove from list\"\n          />\n        ) : (\n          <IconButton\n            size=\"sm\"\n            variantColor=\"blue\"\n            icon={selected ? MdLabel : MdLabelOutline}\n            onClick={changeStatus}\n            aria-label={`Click to select`}\n          />\n        )}\n      </Flex>\n    </SimpleGrid>\n  );\n};\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}