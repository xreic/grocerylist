{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\Item.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from 'react';\nimport { SimpleGrid, ListItem, CloseButton, Flex, Text, IconButton } from '@chakra-ui/core';\nimport { MdCheck } from 'react-icons/md';\nimport { ViewContext } from '../lib/ViewContext';\n\nconst Item = ({\n  id,\n  product,\n  quantity,\n  handleClick\n}) => {\n  const {\n    isAdd,\n    setIsAdd\n  } = useContext(ViewContext);\n  return __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(SimpleGrid, {\n    columns: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    alignSelf: \"center\",\n    as: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, product), __jsx(Text, {\n    alignSelf: \"center\",\n    as: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, quantity), __jsx(Flex, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, isAdd ? __jsx(CloseButton, {\n    onClick: () => handleClick(id),\n    \"aria-label\": \"Click to \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }) : __jsx(IconButton, {\n    icon: MdCheck,\n    \"aria-label\": \"Click to \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Item;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/Item.js"],"names":["useContext","SimpleGrid","ListItem","CloseButton","Flex","Text","IconButton","MdCheck","ViewContext","Item","id","product","quantity","handleClick","isAdd","setIsAdd"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,UANF,QAOO,iBAPP;AAQA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAA4C;AACvD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBf,UAAU,CAACQ,WAAD,CAAtC;AAEA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OADH,CADF,EAIE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,EAAE,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CAJF,EAOE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,GACJ,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE,MAAMD,WAAW,CAACH,EAAD,CAAvC;AAA6C,kBAAW,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAGJ,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEH,OAAlB;AAA2B,kBAAW,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAPF,CADF,CADF;AAmBD,CAtBD;;AAuBA,eAAeE,IAAf","sourcesContent":["import { useContext } from 'react';\nimport {\n  SimpleGrid,\n  ListItem,\n  CloseButton,\n  Flex,\n  Text,\n  IconButton\n} from '@chakra-ui/core';\nimport { MdCheck } from 'react-icons/md';\nimport { ViewContext } from '../lib/ViewContext';\n\nconst Item = ({ id, product, quantity, handleClick }) => {\n  const { isAdd, setIsAdd } = useContext(ViewContext);\n\n  return (\n    <ListItem>\n      <SimpleGrid columns=\"3\">\n        <Text alignSelf=\"center\" as=\"b\">\n          {product}\n        </Text>\n        <Text alignSelf=\"center\" as=\"b\">\n          {quantity}\n        </Text>\n        <Flex justify=\"center\">\n          {isAdd ? (\n            <CloseButton onClick={() => handleClick(id)} aria-label=\"Click to \"/>\n          ) : (\n            <IconButton icon={MdCheck} aria-label=\"Click to \"/>\n          )}\n        </Flex>\n      </SimpleGrid>\n    </ListItem>\n  );\n};\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}