{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\SignInForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport Router from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport Cookies from 'js-cookie'; // Styles\n\nimport { Button, Flex, InputGroup, InputRightElement, SimpleGrid, Stack, useToast } from '@chakra-ui/core';\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled'; // Helpers\n\nimport { REGISTER_USER_MUTATION, SIGNIN_USER_MUTATION } from '../lib/apollo/mutations';\nimport { doctorError } from '../lib/doctorError'; // Contexts\n\nimport { UserContext } from '../lib/React/UserContext';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef(''); // Hooks\n\n  const toast = useToast();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const {\n    0: isCalling,\n    1: setIsCalling\n  } = useState(false);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState('');\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const {\n    0: isRegistering,\n    1: setIsRegistering\n  } = useState(false); // Apollo\n\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n  const [signin, signinRes] = useMutation(SIGNIN_USER_MUTATION); // useEffect\n\n  useEffect(() => {\n    if (user) Router.push('/');\n  }, [user]); // Handlers\n\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRegister = () => {\n    setIsError('');\n    setIsRegistering(!isRegistering);\n  };\n\n  const handleSubmit = async e => {\n    setIsError('');\n    setIsCalling(true);\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    try {\n      if (isRegistering) {\n        const displayname = nameRef.current.value;\n        const confirmpassword = passwordConfirmationRef === null || passwordConfirmationRef === void 0 ? void 0 : passwordConfirmationRef.current.value;\n        await register({\n          variables: {\n            input: {\n              email,\n              displayname,\n              password,\n              confirmpassword\n            }\n          }\n        });\n      }\n\n      const tokenRes = await signin({\n        variables: {\n          input: {\n            email,\n            password\n          }\n        }\n      }); // No cookies are set on an invalid login\n\n      Cookies.set('grocerylist_auth_token', tokenRes.data.authenticate.jwtToken);\n      setIsCalling(false);\n      setIsRegistering(false);\n      setUser(!!Cookies.get('grocerylist_auth_token'));\n    } catch (error) {\n      setIsCalling(false);\n      toast({\n        description: doctorError(error.message),\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n  };\n\n  return __jsx(Stack, {\n    spacing: \"0.5rem\",\n    paddingBottom: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    justify: \"center\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minWidth: \"300px\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    ref: emailRef,\n    isDisabled: isCalling,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), isRegistering && __jsx(StyledInput, {\n    type: \"text\",\n    placeholder: \"Enter display name\",\n    ref: nameRef,\n    isDisabled: isCalling,\n    isRequired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Enter password\",\n    ref: passwordRef,\n    isDisabled: isCalling,\n    isRequired: true,\n    error: isError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: togglePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, showPassword ? 'Hide' : 'Show'))), isRegistering && __jsx(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Confirm password\",\n    ref: passwordConfirmationRef,\n    isDisabled: isCalling,\n    isRequired: true,\n    error: isError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: togglePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, showPassword ? 'Hide' : 'Show'))), __jsx(SimpleGrid, {\n    columns: \"2\",\n    gridGap: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(StyledButton, {\n    variantColor: \"blue\",\n    icon: isRegistering ? AiOutlineDoubleLeft : AiOutlineForm,\n    isLoading: isCalling,\n    isDisabled: isCalling,\n    \"aira-busy\": isCalling,\n    \"aria-label\": \"Register for an account\",\n    onClick: toggleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: FiLogIn,\n    isLoading: isCalling,\n    isDisabled: isCalling,\n    \"aira-busy\": isCalling,\n    \"aria-label\": \"Log into your account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/SignInForm.js"],"names":["useContext","useEffect","useRef","useState","Router","useMutation","Cookies","Button","Flex","InputGroup","InputRightElement","SimpleGrid","Stack","useToast","AiOutlineForm","AiOutlineDoubleLeft","FiLogIn","StyledButton","StyledInput","StyledInputPW","REGISTER_USER_MUTATION","SIGNIN_USER_MUTATION","doctorError","UserContext","SignInForm","emailRef","nameRef","passwordRef","passwordConfirmationRef","toast","user","setUser","isCalling","setIsCalling","isError","setIsError","showPassword","setShowPassword","isRegistering","setIsRegistering","register","registerRes","signin","signinRes","push","togglePassword","toggleRegister","handleSubmit","e","preventDefault","email","current","value","password","displayname","confirmpassword","variables","input","tokenRes","set","data","authenticate","jwtToken","get","error","description","message","status","duration","isClosable"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport Router from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport Cookies from 'js-cookie';\n\n// Styles\nimport {\n  Button,\n  Flex,\n  InputGroup,\n  InputRightElement,\n  SimpleGrid,\n  Stack,\n  useToast\n} from '@chakra-ui/core';\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled';\n\n// Helpers\nimport {\n  REGISTER_USER_MUTATION,\n  SIGNIN_USER_MUTATION\n} from '../lib/apollo/mutations';\nimport { doctorError } from '../lib/doctorError';\n\n// Contexts\nimport { UserContext } from '../lib/React/UserContext';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef('');\n\n  // Hooks\n  const toast = useToast();\n  const { user, setUser } = useContext(UserContext);\n  const [isCalling, setIsCalling] = useState(false);\n  const [isError, setIsError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n\n  // Apollo\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n  const [signin, signinRes] = useMutation(SIGNIN_USER_MUTATION);\n\n  // useEffect\n  useEffect(() => {\n    if (user) Router.push('/');\n  }, [user]);\n\n  // Handlers\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRegister = () => {\n    setIsError('');\n    setIsRegistering(!isRegistering);\n  };\n\n  const handleSubmit = async (e) => {\n    setIsError('');\n    setIsCalling(true);\n    e.preventDefault();\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    try {\n      if (isRegistering) {\n        const displayname = nameRef.current.value;\n        const confirmpassword = passwordConfirmationRef?.current.value;\n\n        await register({\n          variables: {\n            input: { email, displayname, password, confirmpassword }\n          }\n        });\n      }\n\n      const tokenRes = await signin({\n        variables: { input: { email, password } }\n      });\n\n      // No cookies are set on an invalid login\n      Cookies.set(\n        'grocerylist_auth_token',\n        tokenRes.data.authenticate.jwtToken\n      );\n\n      setIsCalling(false);\n      setIsRegistering(false);\n      setUser(!!Cookies.get('grocerylist_auth_token'));\n    } catch (error) {\n      setIsCalling(false);\n      toast({\n        description: doctorError(error.message),\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n    }\n  };\n\n  return (\n    <Stack spacing=\"0.5rem\" paddingBottom=\"2rem\">\n      <Flex\n        justify=\"center\"\n        flexDirection=\"column\"\n        margin=\"auto\"\n        minWidth=\"300px\"\n        maxWidth=\"400px\"\n      >\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <StyledInput\n            type=\"email\"\n            placeholder=\"Enter email\"\n            ref={emailRef}\n            isDisabled={isCalling}\n            isRequired\n          />\n\n          {isRegistering && (\n            <StyledInput\n              type=\"text\"\n              placeholder=\"Enter display name\"\n              ref={nameRef}\n              isDisabled={isCalling}\n              isRequired\n            />\n          )}\n\n          <InputGroup size=\"md\">\n            <StyledInputPW\n              pr=\"4.5rem\"\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              ref={passwordRef}\n              isDisabled={isCalling}\n              isRequired\n              error={isError}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={togglePassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          {isRegistering && (\n            <InputGroup size=\"md\">\n              <StyledInputPW\n                pr=\"4.5rem\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Confirm password\"\n                ref={passwordConfirmationRef}\n                isDisabled={isCalling}\n                isRequired\n                error={isError}\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={togglePassword}>\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          )}\n\n          <SimpleGrid columns=\"2\" gridGap=\"5px\">\n            <StyledButton\n              variantColor=\"blue\"\n              icon={isRegistering ? AiOutlineDoubleLeft : AiOutlineForm}\n              isLoading={isCalling}\n              isDisabled={isCalling}\n              aira-busy={isCalling}\n              aria-label=\"Register for an account\"\n              onClick={toggleRegister}\n            />\n            <StyledButton\n              type=\"submit\"\n              variantColor=\"blue\"\n              icon={FiLogIn}\n              isLoading={isCalling}\n              isDisabled={isCalling}\n              aira-busy={isCalling}\n              aria-label=\"Log into your account\"\n            />\n          </SimpleGrid>\n        </form>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}