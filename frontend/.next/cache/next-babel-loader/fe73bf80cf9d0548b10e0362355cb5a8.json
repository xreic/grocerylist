{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependnencies\nimport { useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks'; // Helpers\n\nimport { ALL_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations'; // Styles\n\nimport { Heading, Skeleton, SimpleGrid, Stack, useToast } from '@chakra-ui/core'; // Components\n\nimport Item from './Item';\n\nvar GroceryList = function GroceryList() {\n  _s();\n\n  // Hooks\n  var toast = useToast(); // Apollo\n\n  var _useQuery = useQuery(ALL_ITEMS_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(REMOVE_ITEM_MUTATION, {\n    update: function update(cache, _ref) {\n      var deleteItem = _ref.data.deleteItem;\n\n      var _cache$readQuery = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      }),\n          nodes = _cache$readQuery.items.nodes;\n\n      var id = deleteItem.item.id;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: {\n          items: {\n            nodes: nodes.filter(function (node) {\n              return node.id !== id;\n            })\n          }\n        }\n      });\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteItem = _useMutation2[0],\n      deleteResponse = _useMutation2[1]; // Handlers\n\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return deleteItem({\n                variables: {\n                  input: {\n                    id: id\n                  }\n                }\n              });\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function handleClick(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (error || deleteResponse) {\n    var _deleteResponse$error;\n\n    console.log('error:', error);\n    if (deleteResponse) toast({\n      description: JSON.stringify(deleteResponse === null || deleteResponse === void 0 ? void 0 : (_deleteResponse$error = deleteResponse.error) === null || _deleteResponse$error === void 0 ? void 0 : _deleteResponse$error.message),\n      status: 'error',\n      duration: 9001,\n      isClosable: true\n    }); // console.log(JSON.stringify(deleteResponse.error.message));\n  }\n\n  if (loading) return __jsx(Stack, {\n    width: \"60%\",\n    maxWidth: \"500px\",\n    minWidth: \"300px\",\n    margin: \"auto\",\n    spacing: \"0.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    as: \"h4\",\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Loading\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"), __jsx(Skeleton, {\n    borderRadius: \"1rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Placeholder\"));\n\n  if (data.items.nodes.length) {\n    var list = data.items.nodes;\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, __jsx(Stack, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      spacing: \"0.5rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Item\"), __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Quantity\")), __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, list.map(function (item) {\n      return __jsx(Item, {\n        key: item.id + item.product,\n        id: item.id,\n        product: item.product,\n        quantity: item.quantity,\n        handleClick: handleClick,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      });\n    }))));\n  } else {\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Remember to add to your list. \\uD83D\\uDCDD\"));\n  }\n};\n\n_s(GroceryList, \"SxsF5+CrUtyLlROyEE7idLGeblo=\", false, function () {\n  return [useToast, useQuery, useMutation];\n});\n\n_c = GroceryList;\nexport default GroceryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryList\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useState","useMutation","useQuery","ALL_ITEMS_QUERY","REMOVE_ITEM_MUTATION","Heading","Skeleton","SimpleGrid","Stack","useToast","Item","GroceryList","toast","data","loading","error","update","cache","deleteItem","readQuery","query","nodes","items","id","item","writeQuery","filter","node","deleteResponse","handleClick","variables","input","console","log","description","JSON","stringify","message","status","duration","isClosable","length","list","map","product","quantity"],"mappings":"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","sourcesContent":["// Dependnencies\nimport { useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\n// Helpers\nimport { ALL_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { REMOVE_ITEM_MUTATION } from '../lib/apollo/mutations';\n\n// Styles\nimport {\n  Heading,\n  Skeleton,\n  SimpleGrid,\n  Stack,\n  useToast\n} from '@chakra-ui/core';\n\n// Components\nimport Item from './Item';\n\nconst GroceryList = () => {\n  // Hooks\n  const toast = useToast();\n\n  // Apollo\n  const { data, loading, error } = useQuery(ALL_ITEMS_QUERY);\n  const [deleteItem, deleteResponse] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, { data: { deleteItem } }) {\n      const {\n        items: { nodes }\n      } = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\n      const { id } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: { items: { nodes: nodes.filter((node) => node.id !== id) } }\n      });\n    }\n  });\n\n  // Handlers\n  const handleClick = async (id) => {\n    try {\n      await deleteItem({ variables: { input: { id } } });\n    } catch (error) {\n      // toast({\n      //   description: JSON.stringify(error),\n      //   status: 'error',\n      //   duration: '9001',\n      //   isClosable: 'true'\n      // });\n      // console.log('error');\n      // console.log(error);\n    }\n  };\n\n  if (error || deleteResponse) {\n    console.log('error:', error);\n\n    if (deleteResponse)\n      toast({\n        description: JSON.stringify(deleteResponse?.error?.message),\n        status: 'error',\n        duration: 9001,\n        isClosable: true\n      });\n\n    // console.log(JSON.stringify(deleteResponse.error.message));\n  }\n\n  if (loading)\n    return (\n      <Stack\n        width=\"60%\"\n        maxWidth=\"500px\"\n        minWidth=\"300px\"\n        margin=\"auto\"\n        spacing=\"0.5rem\"\n      >\n        <Heading as=\"h4\" size=\"lg\">\n          Loading\n        </Heading>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n      </Stack>\n    );\n\n  if (data.items.nodes.length) {\n    const list = data.items.nodes;\n\n    return (\n      <React.Fragment>\n        <Stack\n          width=\"60%\"\n          maxWidth=\"500px\"\n          minWidth=\"300px\"\n          margin=\"auto\"\n          spacing=\"0.5rem\"\n        >\n          <SimpleGrid columns=\"3\">\n            <Heading as=\"h4\" size=\"lg\">\n              Item\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              Quantity\n            </Heading>\n          </SimpleGrid>\n          <SimpleGrid columns=\"3\">\n            {list.map((item) => (\n              <Item\n                key={item.id + item.product}\n                id={item.id}\n                product={item.product}\n                quantity={item.quantity}\n                handleClick={handleClick}\n              />\n            ))}\n          </SimpleGrid>\n        </Stack>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Heading as=\"h4\" size=\"lg\">\n          Remember to add to your list. 📝\n        </Heading>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}