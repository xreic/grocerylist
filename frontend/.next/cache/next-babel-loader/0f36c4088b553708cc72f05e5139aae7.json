{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Flex, InputGroup, InputRightElement, SimpleGrid, Stack } from '@chakra-ui/core'; // Styles\n\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput } from './styles/styled'; // Helpers\n\nimport { REGISTER_USER_MUTATION } from '../lib/mutations';\n\nvar SignInForm = function SignInForm() {\n  _s();\n\n  // Form Refs\n  var emailRef = useRef('');\n  var passwordRef = useRef('');\n  var passwordConfirmationRef = useRef(''); // Hooks\n\n  var _useState = useState(false),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(false),\n      showPassword = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(false),\n      registering = _useState3[0],\n      setRegistering = _useState3[1]; // Apollo\n\n\n  var _useMutation = useMutation(REGISTER_USER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      register = _useMutation2[0],\n      registerRes = _useMutation2[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (registering) {\n      var input = {};\n      register({\n        variables: {}\n      });\n    }\n  };\n\n  return __jsx(Stack, {\n    spacing: \"2rem\",\n    paddingBottom: \"2rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    ref: emailRef,\n    isDisabled: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), __jsx(InputGroup, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(StyledInput, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Enter password\",\n    ref: passwordRef,\n    isDisabled: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: function onClick() {\n      return setShow(!showPassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, showPassword ? 'Hide' : 'Show'))), registering && __jsx(InputGroup, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInput, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Confirm password\",\n    ref: passwordConfirmationRef,\n    isDisabled: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: function onClick() {\n      return setShow(!showPassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, showPassword ? 'Hide' : 'Show'))), __jsx(SimpleGrid, {\n    columns: \"2\",\n    gridGap: \"5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(StyledButton, {\n    variantColor: \"blue\",\n    icon: registering ? AiOutlineDoubleLeft : AiOutlineForm,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Register for an account\",\n    onClick: function onClick() {\n      return setRegistering(!registering);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: FiLogIn,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Log into your account\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(SignInForm, \"sNYTEHtf2FZn0anScUFZMSkVN6I=\", false, function () {\n  return [useMutation];\n});\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/SignInForm.js"],"names":["useRef","useState","useMutation","Button","Flex","InputGroup","InputRightElement","SimpleGrid","Stack","AiOutlineForm","AiOutlineDoubleLeft","FiLogIn","StyledButton","StyledInput","REGISTER_USER_MUTATION","SignInForm","emailRef","passwordRef","passwordConfirmationRef","status","setStatus","showPassword","setShow","registering","setRegistering","register","registerRes","handleSubmit","e","preventDefault","input","variables"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  Button,\n  Flex,\n  InputGroup,\n  InputRightElement,\n  SimpleGrid,\n  Stack\n} from '@chakra-ui/core';\n\n// Styles\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput } from './styles/styled';\n\n// Helpers\nimport { REGISTER_USER_MUTATION } from '../lib/mutations';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef('');\n\n  // Hooks\n  const [status, setStatus] = useState(false);\n  const [showPassword, setShow] = useState(false);\n  const [registering, setRegistering] = useState(false);\n\n  // Apollo\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (registering) {\n      const input = {}\n      register({variables: {}})\n    }\n  };\n\n  return (\n    <Stack spacing=\"2rem\" paddingBottom=\"2rem\">\n      <Flex justify=\"center\">\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <StyledInput\n            type=\"email\"\n            placeholder=\"Enter email\"\n            ref={emailRef}\n            isDisabled={status}\n          />\n\n          <InputGroup size=\"md\">\n            <StyledInput\n              pr=\"4.5rem\"\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              ref={passwordRef}\n              isDisabled={status}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button\n                h=\"1.75rem\"\n                size=\"sm\"\n                onClick={() => setShow(!showPassword)}\n              >\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          {registering && (\n            <InputGroup size=\"md\">\n              <StyledInput\n                pr=\"4.5rem\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Confirm password\"\n                ref={passwordConfirmationRef}\n                isDisabled={status}\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button\n                  h=\"1.75rem\"\n                  size=\"sm\"\n                  onClick={() => setShow(!showPassword)}\n                >\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          )}\n\n          <SimpleGrid columns=\"2\" gridGap=\"5px\">\n            <StyledButton\n              variantColor=\"blue\"\n              icon={registering ? AiOutlineDoubleLeft : AiOutlineForm}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Register for an account\"\n              onClick={() => setRegistering(!registering)}\n            />\n            <StyledButton\n              type=\"submit\"\n              variantColor=\"blue\"\n              icon={FiLogIn}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Log into your account\"\n            />\n          </SimpleGrid>\n        </form>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}