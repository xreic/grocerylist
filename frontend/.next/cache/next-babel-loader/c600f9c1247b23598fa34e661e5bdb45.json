{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useRef, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport Cookies from 'js-cookie';\nimport { Button, Flex, Heading, InputGroup, InputRightElement, SimpleGrid, Stack } from '@chakra-ui/core'; // Styles\n\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled'; // Helpers\n\nimport { REGISTER_USER_MUTATION, SIGNIN_USER_MUTATION } from '../lib/apollo/mutations'; // Component\n\nimport ErrorMessage from './ErrorMessage';\n\nvar SignInForm = function SignInForm() {\n  _s();\n\n  // Form Refs\n  var emailRef = useRef('');\n  var nameRef = useRef('');\n  var passwordRef = useRef('');\n  var passwordConfirmationRef = useRef(''); // Hooks\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      showPassword = _useState3[0],\n      setShowPassword = _useState3[1];\n\n  var _useState4 = useState(false),\n      isRegistering = _useState4[0],\n      setIsRegistering = _useState4[1]; // Apollo\n\n\n  var _useMutation = useMutation(REGISTER_USER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      register = _useMutation2[0],\n      registerRes = _useMutation2[1];\n\n  var _useMutation3 = useMutation(SIGNIN_USER_MUTATION),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      signin = _useMutation4[0],\n      signinRes = _useMutation4[1]; // Handlers\n\n\n  var togglePassword = function togglePassword() {\n    setShowPassword(!showPassword);\n  };\n\n  var toggleRegister = function toggleRegister() {\n    setError('');\n    setIsRegistering(!isRegistering);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var email, password, displayname, confirmpassword, tokenRes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setError('');\n              setStatus(true);\n              e.preventDefault();\n              email = emailRef.current.value;\n              password = passwordRef.current.value;\n              _context.prev = 5;\n\n              if (!isRegistering) {\n                _context.next = 17;\n                break;\n              }\n\n              displayname = nameRef.current.value;\n              confirmpassword = passwordConfirmationRef === null || passwordConfirmationRef === void 0 ? void 0 : passwordConfirmationRef.current.value;\n              console.log('Step: 1');\n              console.log('email:', email);\n              console.log('displayname:', displayname);\n              console.log('password:', password);\n              console.log('confirmpassword:', confirmpassword);\n              _context.next = 16;\n              return register({\n                variables: {\n                  input: {\n                    email: email,\n                    displayname: displayname,\n                    password: password,\n                    confirmpassword: confirmpassword\n                  }\n                }\n              });\n\n            case 16:\n              console.log('Step: 2');\n\n            case 17:\n              _context.next = 19;\n              return signin({\n                variables: {\n                  input: {\n                    email: email,\n                    password: password\n                  }\n                }\n              });\n\n            case 19:\n              tokenRes = _context.sent;\n              // No cookies are set on an invalid login\n              Cookies.set('grocerylist_auth_token', tokenRes.data.authenticate.jwtToken);\n              setIsRegistering(false);\n              router.push('/');\n              _context.next = 30;\n              break;\n\n            case 25:\n              _context.prev = 25;\n              _context.t0 = _context[\"catch\"](5);\n              console.log('error');\n              console.log(JSON.parse(JSON.stringify(_context.t0)));\n              setError(_context.t0.message);\n\n            case 30:\n              _context.prev = 30;\n              setStatus(false);\n              return _context.finish(30);\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 25, 30, 33]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Stack, {\n    spacing: \"0.5rem\",\n    paddingBottom: \"2rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, error !== '' && __jsx(ErrorMessage, {\n    error: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 24\n    }\n  }), __jsx(Flex, {\n    justify: \"center\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minWidth: \"300px\",\n    maxWidth: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    ref: emailRef,\n    isDisabled: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), isRegistering && __jsx(StyledInput, {\n    type: \"text\",\n    placeholder: \"Enter display name\",\n    ref: nameRef,\n    isDisabled: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), __jsx(InputGroup, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Enter password\",\n    ref: passwordRef,\n    isDisabled: status,\n    error: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: togglePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, showPassword ? 'Hide' : 'Show'))), isRegistering && __jsx(InputGroup, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Confirm password\",\n    ref: passwordConfirmationRef,\n    isDisabled: status,\n    error: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: togglePassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, showPassword ? 'Hide' : 'Show'))), __jsx(SimpleGrid, {\n    columns: \"2\",\n    gridGap: \"5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(StyledButton, {\n    variantColor: \"blue\",\n    icon: isRegistering ? AiOutlineDoubleLeft : AiOutlineForm,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Register for an account\",\n    onClick: toggleRegister,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: FiLogIn,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Log into your account\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(SignInForm, \"7mIXApfFGPULv2lSge/YSyrFMvY=\", false, function () {\n  return [useRouter, useMutation, useMutation];\n});\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/SignInForm.js"],"names":["useRef","useState","useRouter","useMutation","Cookies","Button","Flex","Heading","InputGroup","InputRightElement","SimpleGrid","Stack","AiOutlineForm","AiOutlineDoubleLeft","FiLogIn","StyledButton","StyledInput","StyledInputPW","REGISTER_USER_MUTATION","SIGNIN_USER_MUTATION","ErrorMessage","SignInForm","emailRef","nameRef","passwordRef","passwordConfirmationRef","router","status","setStatus","error","setError","showPassword","setShowPassword","isRegistering","setIsRegistering","register","registerRes","signin","signinRes","togglePassword","toggleRegister","handleSubmit","e","preventDefault","email","current","value","password","displayname","confirmpassword","console","log","variables","input","tokenRes","set","data","authenticate","jwtToken","push","JSON","parse","stringify","message"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useRef, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport Cookies from 'js-cookie';\nimport {\n  Button,\n  Flex,\n  Heading,\n  InputGroup,\n  InputRightElement,\n  SimpleGrid,\n  Stack\n} from '@chakra-ui/core';\n\n// Styles\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled';\n\n// Helpers\nimport {\n  REGISTER_USER_MUTATION,\n  SIGNIN_USER_MUTATION\n} from '../lib/apollo/mutations';\n\n// Component\nimport ErrorMessage from './ErrorMessage';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef('');\n\n  // Hooks\n  const router = useRouter();\n  const [status, setStatus] = useState(false);\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n\n  // Apollo\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n  const [signin, signinRes] = useMutation(SIGNIN_USER_MUTATION);\n\n  // Handlers\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRegister = () => {\n    setError('');\n    setIsRegistering(!isRegistering);\n  };\n\n  const handleSubmit = async (e) => {\n    setError('');\n    setStatus(true);\n    e.preventDefault();\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    try {\n      if (isRegistering) {\n        const displayname = nameRef.current.value;\n        const confirmpassword = passwordConfirmationRef?.current.value;\n\n        console.log('Step: 1');\n        console.log('email:', email);\n        console.log('displayname:', displayname);\n        console.log('password:', password);\n        console.log('confirmpassword:', confirmpassword);\n\n        await register({\n          variables: {\n            input: { email, displayname, password, confirmpassword }\n          }\n        });\n\n        console.log('Step: 2');\n      }\n\n      const tokenRes = await signin({\n        variables: { input: { email, password } }\n      });\n\n      // No cookies are set on an invalid login\n      Cookies.set(\n        'grocerylist_auth_token',\n        tokenRes.data.authenticate.jwtToken\n      );\n\n      setIsRegistering(false);\n      router.push('/');\n    } catch (error) {\n      console.log('error');\n      console.log(JSON.parse(JSON.stringify(error)));\n      setError(error.message);\n    } finally {\n      setStatus(false);\n    }\n  };\n\n  return (\n    <Stack spacing=\"0.5rem\" paddingBottom=\"2rem\">\n      {error !== '' && <ErrorMessage error={error} />}\n      <Flex\n        justify=\"center\"\n        flexDirection=\"column\"\n        margin=\"auto\"\n        minWidth=\"300px\"\n        maxWidth=\"400px\"\n      >\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <StyledInput\n            type=\"email\"\n            placeholder=\"Enter email\"\n            ref={emailRef}\n            isDisabled={status}\n          />\n\n          {isRegistering && (\n            <StyledInput\n              type=\"text\"\n              placeholder=\"Enter display name\"\n              ref={nameRef}\n              isDisabled={status}\n            />\n          )}\n\n          <InputGroup size=\"md\">\n            <StyledInputPW\n              pr=\"4.5rem\"\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              ref={passwordRef}\n              isDisabled={status}\n              error={error}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={togglePassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          {isRegistering && (\n            <InputGroup size=\"md\">\n              <StyledInputPW\n                pr=\"4.5rem\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Confirm password\"\n                ref={passwordConfirmationRef}\n                isDisabled={status}\n                error={error}\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={togglePassword}>\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          )}\n\n          <SimpleGrid columns=\"2\" gridGap=\"5px\">\n            <StyledButton\n              variantColor=\"blue\"\n              icon={isRegistering ? AiOutlineDoubleLeft : AiOutlineForm}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Register for an account\"\n              onClick={toggleRegister}\n            />\n            <StyledButton\n              type=\"submit\"\n              variantColor=\"blue\"\n              icon={FiLogIn}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Log into your account\"\n            />\n          </SimpleGrid>\n        </form>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}