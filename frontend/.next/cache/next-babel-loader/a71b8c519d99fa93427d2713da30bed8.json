{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\HistoryList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useQuery } from '@apollo/react-hooks'; // Styles\n\nimport { Box, Heading, Skeleton, SimpleGrid, Stack, useToast } from '@chakra-ui/core'; // Helpers\n\nimport { doctorError } from '../lib/doctorError'; // Apollo\n// Components\n\nimport HistoryItem from './HistoryItem';\n\nvar HistoryList = function HistoryList() {\n  _s();\n\n  var _data$currentUserItem;\n\n  // Hooks\n  var toast = useToast(); // Apollo\n\n  if (error) {\n    toast({\n      description: error,\n      status: 'error',\n      duration: 9001,\n      isClosable: true\n    });\n  }\n\n  if (loading) {\n    return __jsx(Stack, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      spacing: \"0.5rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Loading\"), __jsx(Skeleton, {\n      borderRadius: \"1rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Placeholder\"), __jsx(Skeleton, {\n      borderRadius: \"1rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Placeholder\"), __jsx(Skeleton, {\n      borderRadius: \"1rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Placeholder\"), __jsx(Skeleton, {\n      borderRadius: \"1rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Placeholder\"));\n  }\n\n  if ((_data$currentUserItem = data.currentUserItems) === null || _data$currentUserItem === void 0 ? void 0 : _data$currentUserItem.nodes.length) {\n    var list = data.currentUserItems.nodes;\n    return __jsx(Stack, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      spacing: \"0.5rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, __jsx(SimpleGrid, {\n      columns: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Item\"), __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Quantity\")), __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, list.map(function (item) {\n      return __jsx(HistoryItem, {\n        key: item.id + item.product,\n        id: item.id,\n        product: item.product,\n        quantity: item.quantity,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      });\n    })));\n  } else {\n    return __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, \"Remember to add to your list. \\uD83D\\uDCDD\");\n  }\n};\n\n_s(HistoryList, \"WUU7e0p6AiTpvVrXhi50JBdcu+0=\", false, function () {\n  return [useToast];\n});\n\n_c = HistoryList;\nexport default HistoryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryList\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/HistoryList.js"],"names":["useQuery","Box","Heading","Skeleton","SimpleGrid","Stack","useToast","doctorError","HistoryItem","HistoryList","toast","error","description","status","duration","isClosable","loading","data","currentUserItems","nodes","length","list","map","item","id","product","quantity"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useQuery } from '@apollo/react-hooks';\n\n// Styles\nimport {\n  Box,\n  Heading,\n  Skeleton,\n  SimpleGrid,\n  Stack,\n  useToast\n} from '@chakra-ui/core';\n\n// Helpers\nimport { doctorError } from '../lib/doctorError';\n\n// Apollo\n\n// Components\nimport HistoryItem from './HistoryItem';\n\nconst HistoryList = () => {\n  // Hooks\n  const toast = useToast();\n\n  // Apollo\n\n  if (error) {\n    toast({\n      description: error,\n      status: 'error',\n      duration: 9001,\n      isClosable: true\n    });\n  }\n\n  if (loading) {\n    return (\n      <Stack\n        width=\"60%\"\n        maxWidth=\"500px\"\n        minWidth=\"300px\"\n        margin=\"auto\"\n        spacing=\"0.5rem\"\n      >\n        <Heading as=\"h4\" size=\"lg\">\n          Loading\n        </Heading>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n        <Skeleton borderRadius=\"1rem\">Placeholder</Skeleton>\n      </Stack>\n    );\n  }\n\n  if (data.currentUserItems?.nodes.length) {\n    const list = data.currentUserItems.nodes;\n\n    return (\n      <Stack\n        width=\"60%\"\n        maxWidth=\"500px\"\n        minWidth=\"300px\"\n        margin=\"auto\"\n        spacing=\"0.5rem\"\n      >\n        <SimpleGrid columns=\"3\">\n          <Heading as=\"h4\" size=\"lg\">\n            Item\n          </Heading>\n          <Heading as=\"h4\" size=\"lg\">\n            Quantity\n          </Heading>\n        </SimpleGrid>\n        <Box>\n          {list.map((item) => (\n            <HistoryItem\n              key={item.id + item.product}\n              id={item.id}\n              product={item.product}\n              quantity={item.quantity}\n            />\n          ))}\n        </Box>\n      </Stack>\n    );\n  } else {\n    return (\n      <Heading as=\"h4\" size=\"lg\">\n        Remember to add to your list. üìù\n      </Heading>\n    );\n  }\n};\n\nexport default HistoryList;\n"]},"metadata":{},"sourceType":"module"}