{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks'; // Helpers\n\nimport { REMOVE_ITEM_MUTATION } from '../lib/mutations';\nimport { ALL_ITEMS_QUERY } from '../lib/queries'; // Styles\n\nimport { List, ListItem, SimpleGrid, Heading } from '@chakra-ui/core'; // Components\n\nimport Item from './Item';\n\nconst GroceryList = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(ALL_ITEMS_QUERY);\n  const [deleteItem, deleteRes] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, {\n      data: {\n        deleteItem\n      }\n    }) {\n      const {\n        items: {\n          nodes\n        }\n      } = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      });\n      const {\n        id\n      } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: {\n          items: {\n            nodes: nodes.filter(node => node.id !== id)\n          }\n        }\n      });\n    }\n\n  });\n\n  const handleClick = id => {\n    deleteItem({\n      variables: {\n        input: {\n          id\n        }\n      }\n    });\n  }; // if (error) return <p>Error: {error}</p>;\n\n\n  console.log(data);\n  console.log(loading);\n  console.log(JSON.stringify(error)); // if (!loading && data.items && data.items.length > 0) {\n  //   return (\n  //     <List width=\"60%\" maxWidth=\"500px\" minWidth=\"300px\" margin=\"auto\">\n  //       <ListItem paddingBottom=\"0.5rem\">\n  //         <SimpleGrid columns=\"3\">\n  //           <Heading as=\"h4\" size=\"lg\">\n  //             Item\n  //           </Heading>\n  //           <Heading as=\"h4\" size=\"lg\">\n  //             Quantity\n  //           </Heading>\n  //         </SimpleGrid>\n  //       </ListItem>\n  //       {data.items.map((item) => (\n  //         <Item\n  //           key={item.id + item.product}\n  //           id={item.id}\n  //           product={item.product}\n  //           quantity={item.quantity}\n  //           handleClick={handleClick}\n  //         />\n  //       ))}\n  //     </List>\n  //   );\n  // } else {\n\n  return __jsx(Heading, {\n    as: \"h4\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"No groceries.\"); // }\n};\n\nexport default GroceryList;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryList.js"],"names":["useMutation","useQuery","REMOVE_ITEM_MUTATION","ALL_ITEMS_QUERY","List","ListItem","SimpleGrid","Heading","Item","GroceryList","data","loading","error","deleteItem","deleteRes","update","cache","items","nodes","readQuery","query","id","item","writeQuery","filter","node","handleClick","variables","input","console","log","JSON","stringify"],"mappings":";;;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,qBAAtC,C,CAEA;;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,eAAT,QAAgC,gBAAhC,C,CAEA;;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,OAArC,QAAoD,iBAApD,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CAACE,eAAD,CAAzC;AACA,QAAM,CAACU,UAAD,EAAaC,SAAb,IAA0Bd,WAAW,CAACE,oBAAD,EAAuB;AAChEa,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAEN,MAAAA,IAAI,EAAE;AAAEG,QAAAA;AAAF;AAAR,KAAR,EAAkC;AACtC,YAAM;AACJI,QAAAA,KAAK,EAAE;AAAEC,UAAAA;AAAF;AADH,UAEFF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEjB;AAAT,OAAhB,CAFJ;AAIA,YAAM;AAAEkB,QAAAA;AAAF,UAASR,UAAU,CAACS,IAA1B;AACAN,MAAAA,KAAK,CAACO,UAAN,CAAiB;AACfH,QAAAA,KAAK,EAAEjB,eADQ;AAEfO,QAAAA,IAAI,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEA,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAnC;AAAT;AAAT;AAFS,OAAjB;AAID;;AAX+D,GAAvB,CAA3C;;AAcA,QAAMK,WAAW,GAAIL,EAAD,IAAQ;AAC1BR,IAAAA,UAAU,CAAC;AAAEc,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEP,UAAAA;AAAF;AAAT;AAAb,KAAD,CAAV;AACD,GAFD,CAhBwB,CAoBxB;;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAepB,KAAf,CAAZ,EAvBwB,CAyBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAlDwB,CAuDxB;AACD,CAxDD;;AA0DA,eAAeH,WAAf","sourcesContent":["// Dependnencies\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\n// Helpers\nimport { REMOVE_ITEM_MUTATION } from '../lib/mutations';\nimport { ALL_ITEMS_QUERY } from '../lib/queries';\n\n// Styles\nimport { List, ListItem, SimpleGrid, Heading } from '@chakra-ui/core';\n\n// Components\nimport Item from './Item';\n\nconst GroceryList = () => {\n  const { data, loading, error } = useQuery(ALL_ITEMS_QUERY);\n  const [deleteItem, deleteRes] = useMutation(REMOVE_ITEM_MUTATION, {\n    update(cache, { data: { deleteItem } }) {\n      const {\n        items: { nodes }\n      } = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\n      const { id } = deleteItem.item;\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: { items: { nodes: nodes.filter((node) => node.id !== id) } }\n      });\n    }\n  });\n\n  const handleClick = (id) => {\n    deleteItem({ variables: { input: { id } } });\n  };\n\n  // if (error) return <p>Error: {error}</p>;\n  console.log(data);\n  console.log(loading);\n  console.log(JSON.stringify(error));\n\n  // if (!loading && data.items && data.items.length > 0) {\n  //   return (\n  //     <List width=\"60%\" maxWidth=\"500px\" minWidth=\"300px\" margin=\"auto\">\n  //       <ListItem paddingBottom=\"0.5rem\">\n  //         <SimpleGrid columns=\"3\">\n  //           <Heading as=\"h4\" size=\"lg\">\n  //             Item\n  //           </Heading>\n  //           <Heading as=\"h4\" size=\"lg\">\n  //             Quantity\n  //           </Heading>\n  //         </SimpleGrid>\n  //       </ListItem>\n  //       {data.items.map((item) => (\n  //         <Item\n  //           key={item.id + item.product}\n  //           id={item.id}\n  //           product={item.product}\n  //           quantity={item.quantity}\n  //           handleClick={handleClick}\n  //         />\n  //       ))}\n  //     </List>\n  //   );\n  // } else {\n  return (\n    <Heading as=\"h4\" size=\"lg\">\n      No groceries.\n    </Heading>\n  );\n  // }\n};\n\nexport default GroceryList;\n"]},"metadata":{},"sourceType":"module"}