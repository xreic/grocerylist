{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\HistoryLayout.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useQuery } from '@apollo/react-hooks'; // Styles\n\nimport { AccordionItem, AccordionHeader, AccordionPanel, AccordionIcon, Box, Text, Heading, Stack, useToast, Skeleton } from '@chakra-ui/core'; // Apollo\n\nimport { USER_HISTORY_QUERY } from '../lib/apollo/queries'; // Components\n\nimport Loading from './Loading';\nimport HistoryList from './HistoryList';\n\nvar HistoryLayout = function HistoryLayout() {\n  _s();\n\n  // Hooks\n  var toast = useToast(); // Apollo\n\n  var _useQuery = useQuery(USER_HISTORY_QUERY),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (error) {\n    toast({\n      description: error,\n      status: 'error',\n      duration: 9001,\n      isClosable: true\n    });\n  }\n\n  if (loading) {\n    return __jsx(Loading, {\n      typ: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, __jsx(Skeleton, {\n      borderRadius: \"1rem\",\n      marginBottom: \"1rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, __jsx(AccordionItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, __jsx(AccordionHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, __jsx(Box, {\n      flex: \"1\",\n      textAlign: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"Yes\"), __jsx(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Yes\")), __jsx(AccordionIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    })), __jsx(AccordionPanel, {\n      pb: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  if (data === null || data === void 0 ? void 0 : data.currentUserHistory.nodes.length) {\n    var list = data.currentUserHistory.nodes;\n    return __jsx(Stack, {\n      width: \"60%\",\n      maxWidth: \"500px\",\n      minWidth: \"300px\",\n      margin: \"auto\",\n      spacing: \"0.5rem\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, list.map(function (item) {\n      return __jsx(HistoryList, _extends({\n        key: item.createdAt\n      }, item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }));\n    }));\n  } else {\n    return __jsx(Heading, {\n      as: \"h4\",\n      size: \"lg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, \"Remember to add to your list. \\uD83D\\uDCDD\");\n  }\n};\n\n_s(HistoryLayout, \"9cs9dm6XPkJ9s6I4XJY7EBvMrfc=\", false, function () {\n  return [useToast, useQuery];\n});\n\n_c = HistoryLayout;\nexport default HistoryLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoryLayout\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/HistoryLayout.js"],"names":["useQuery","AccordionItem","AccordionHeader","AccordionPanel","AccordionIcon","Box","Text","Heading","Stack","useToast","Skeleton","USER_HISTORY_QUERY","Loading","HistoryList","HistoryLayout","toast","data","loading","error","description","status","duration","isClosable","currentUserHistory","nodes","length","list","map","item","createdAt"],"mappings":";;;;;;;;AAAA;AACA,SAASA,QAAT,QAAyB,qBAAzB,C,CAEA;;AACA,SACEC,aADF,EAEEC,eAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,KARF,EASEC,QATF,EAUEC,QAVF,QAWO,iBAXP,C,CAaA;;AACA,SAASC,kBAAT,QAAmC,uBAAnC,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B;AACA,MAAMC,KAAK,GAAGN,QAAQ,EAAtB,CAF0B,CAI1B;;AAJ0B,kBAKOT,QAAQ,CAACW,kBAAD,CALf;AAAA,MAKlBK,IALkB,aAKlBA,IALkB;AAAA,MAKZC,OALY,aAKZA,OALY;AAAA,MAKHC,KALG,aAKHA,KALG;;AAO1B,MAAIA,KAAJ,EAAW;AACTH,IAAAA,KAAK,CAAC;AACJI,MAAAA,WAAW,EAAED,KADT;AAEJE,MAAAA,MAAM,EAAE,OAFJ;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,UAAU,EAAE;AAJR,KAAD,CAAL;AAMD;;AAED,MAAIL,OAAJ,EAAa;AACX,WACE,MAAC,OAAD;AAAS,MAAA,GAAG,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,YAAY,EAAC,MAAvB;AAA8B,MAAA,YAAY,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAK,MAAA,IAAI,EAAC,GAAV;AAAc,MAAA,SAAS,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF,EAKE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,EAQE,MAAC,cAAD;AAAgB,MAAA,EAAE,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF,CADF;AAgBD;;AAED,MAAID,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEO,kBAAN,CAAyBC,KAAzB,CAA+BC,MAAnC,EAA2C;AACzC,QAAMC,IAAI,GAAGV,IAAI,CAACO,kBAAL,CAAwBC,KAArC;AAEA,WACE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,QAAQ,EAAC,OAFX;AAGE,MAAA,QAAQ,EAAC,OAHX;AAIE,MAAA,MAAM,EAAC,MAJT;AAKE,MAAA,OAAO,EAAC,QALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGE,IAAI,CAACC,GAAL,CAAS,UAACC,IAAD;AAAA,aACR,MAAC,WAAD;AAAa,QAAA,GAAG,EAAEA,IAAI,CAACC;AAAvB,SAAsCD,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADQ;AAAA,KAAT,CAPH,CADF;AAaD,GAhBD,MAgBO;AACL,WACE,MAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF;AAKD;AACF,CA1DD;;GAAMd,a;UAEUL,Q,EAGmBT,Q;;;KAL7Bc,a;AA4DN,eAAeA,aAAf","sourcesContent":["// Dependencies\nimport { useQuery } from '@apollo/react-hooks';\n\n// Styles\nimport {\n  AccordionItem,\n  AccordionHeader,\n  AccordionPanel,\n  AccordionIcon,\n  Box,\n  Text,\n  Heading,\n  Stack,\n  useToast,\n  Skeleton\n} from '@chakra-ui/core';\n\n// Apollo\nimport { USER_HISTORY_QUERY } from '../lib/apollo/queries';\n\n// Components\nimport Loading from './Loading';\nimport HistoryList from './HistoryList';\n\nconst HistoryLayout = () => {\n  // Hooks\n  const toast = useToast();\n\n  // Apollo\n  const { data, loading, error } = useQuery(USER_HISTORY_QUERY);\n\n  if (error) {\n    toast({\n      description: error,\n      status: 'error',\n      duration: 9001,\n      isClosable: true\n    });\n  }\n\n  if (loading) {\n    return (\n      <Loading typ>\n        <Skeleton borderRadius=\"1rem\" marginBottom=\"1rem\">\n          <AccordionItem>\n            <AccordionHeader>\n              <Box flex=\"1\" textAlign=\"left\">\n                <Text>Yes</Text>\n                <Text>Yes</Text>\n              </Box>\n              <AccordionIcon />\n            </AccordionHeader>\n            <AccordionPanel pb={4}></AccordionPanel>\n          </AccordionItem>\n        </Skeleton>\n      </Loading>\n    );\n  }\n\n  if (data?.currentUserHistory.nodes.length) {\n    const list = data.currentUserHistory.nodes;\n\n    return (\n      <Stack\n        width=\"60%\"\n        maxWidth=\"500px\"\n        minWidth=\"300px\"\n        margin=\"auto\"\n        spacing=\"0.5rem\"\n      >\n        {list.map((item) => (\n          <HistoryList key={item.createdAt} {...item} />\n        ))}\n      </Stack>\n    );\n  } else {\n    return (\n      <Heading as=\"h4\" size=\"lg\">\n        Remember to add to your list. üìù\n      </Heading>\n    );\n  }\n};\n\nexport default HistoryLayout;\n"]},"metadata":{},"sourceType":"module"}