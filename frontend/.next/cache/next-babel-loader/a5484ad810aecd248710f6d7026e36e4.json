{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport Cookies from 'js-cookie';\n\nconst getToken = () => {\n  return Cookies.get('grocerylist_auth_token') ? Cookies.get('grocerylist_auth_token') : 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c';\n};\n\nexport default function createApolloClient(initialState, ctx) {\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: new HttpLink({\n      request: operation => {\n        const token = localStorage.getItem('token');\n        operation.setContext({\n          headers: {\n            authorization: token ? `Bearer ${token}` : ''\n          }\n        });\n      }\n    }),\n    cache: new InMemoryCache({\n      addTypename: false\n    })\n  });\n}","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/apolloClient.js"],"names":["ApolloClient","InMemoryCache","HttpLink","Cookies","getToken","get","createApolloClient","initialState","ctx","ssrMode","Boolean","link","request","operation","token","localStorage","getItem","setContext","headers","authorization","cache","addTypename"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,SAAOD,OAAO,CAACE,GAAR,CAAY,wBAAZ,IACHF,OAAO,CAACE,GAAR,CAAY,wBAAZ,CADG,GAEH,oKAFJ;AAGD,CAJD;;AAMA,eAAe,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,GAA1C,EAA+C;AAC5D;AACA;AACA,SAAO,IAAIR,YAAJ,CAAiB;AACtBS,IAAAA,OAAO,EAAEC,OAAO,CAACF,GAAD,CADM;AAEtBG,IAAAA,IAAI,EAAE,IAAIT,QAAJ,CAAa;AACjBU,MAAAA,OAAO,EAAGC,SAAD,IAAe;AACtB,cAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,QAAAA,SAAS,CAACI,UAAV,CAAqB;AACnBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAEL,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AADpC;AADU,SAArB;AAKD;AARgB,KAAb,CAFgB;AAYtBM,IAAAA,KAAK,EAAE,IAAInB,aAAJ,CAAkB;AACvBoB,MAAAA,WAAW,EAAE;AADU,KAAlB;AAZe,GAAjB,CAAP;AAgBD","sourcesContent":["import { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst getToken = () => {\r\n  return Cookies.get('grocerylist_auth_token')\r\n    ? Cookies.get('grocerylist_auth_token')\r\n    : 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c';\r\n};\r\n\r\nexport default function createApolloClient(initialState, ctx) {\r\n  // The `ctx` (NextPageContext) will only be present on the server.\r\n  // use it to extract auth headers (ctx.req) or similar.\r\n  return new ApolloClient({\r\n    ssrMode: Boolean(ctx),\r\n    link: new HttpLink({\r\n      request: (operation) => {\r\n        const token = localStorage.getItem('token');\r\n        operation.setContext({\r\n          headers: {\r\n            authorization: token ? `Bearer ${token}` : ''\r\n          }\r\n        });\r\n      }\r\n    }),\r\n    cache: new InMemoryCache({\r\n      addTypename: false\r\n    })\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}