{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Flex, Heading, InputGroup, InputRightElement, SimpleGrid, Stack } from '@chakra-ui/core'; // Styles\n\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled'; // Helpers\n\nimport { REGISTER_USER_MUTATION, SIGNIN_USER_MUTATION } from '../lib/mutations';\n\nvar SignInForm = function SignInForm() {\n  _s();\n\n  // Form Refs\n  var emailRef = useRef('');\n  var nameRef = useRef('');\n  var passwordRef = useRef('');\n  var passwordConfirmationRef = useRef(''); // Hooks\n\n  var _useState = useState(false),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      showPassword = _useState3[0],\n      setShow = _useState3[1];\n\n  var _useState4 = useState(false),\n      registering = _useState4[0],\n      setRegistering = _useState4[1]; // Apollo\n\n\n  var _useMutation = useMutation(REGISTER_USER_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      register = _useMutation2[0],\n      registerRes = _useMutation2[1];\n\n  var _useMutation3 = useMutation(SIGNIN_USER_MUTATION),\n      _useMutation4 = _slicedToArray(_useMutation3, 2),\n      signin = _useMutation4[0],\n      signinRes = _useMutation4[1];\n\n  var toggleRegister = function toggleRegister() {\n    setShow(!showPassword);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var email, displayname, password, confirmpassword;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setStatus(true);\n              e.preventDefault();\n              email = emailRef.current.value;\n              displayname = nameRef.current.value;\n              password = passwordRef.current.value;\n              confirmpassword = passwordConfirmationRef.current.value;\n\n              if (!registering) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.prev = 7;\n              _context.next = 10;\n              return register({\n                variables: {\n                  input: input\n                }\n              });\n\n            case 10:\n              _context.next = 12;\n              return signin({\n                varaibles: {\n                  input: input\n                }\n              });\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](7);\n              setError(_context.t0.message.replace('GraphQL error: ', ''));\n\n            case 17:\n              _context.next = 27;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.next = 22;\n              return signin({\n                variables: {\n                  input: input\n                }\n              });\n\n            case 22:\n              _context.next = 27;\n              break;\n\n            case 24:\n              _context.prev = 24;\n              _context.t1 = _context[\"catch\"](19);\n              setError(_context.t1.message.replace('GraphQL error: ', ''));\n\n            case 27:\n              setStatus(false);\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 14], [19, 24]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Stack, {\n    spacing: \"0.5rem\",\n    paddingBottom: \"2rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, error !== '' && __jsx(Heading, {\n    as: \"h5\",\n    size: \"sm\",\n    color: \"red.600\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, error), __jsx(Flex, {\n    justify: \"center\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minWidth: \"300px\",\n    maxWidth: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    ref: emailRef,\n    isDisabled: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), registering && __jsx(StyledInput, {\n    type: \"text\",\n    placeholder: \"Enter display name\",\n    ref: nameRef,\n    isDisabled: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), __jsx(InputGroup, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Enter password\",\n    ref: passwordRef,\n    isDisabled: status,\n    error: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: toggleRegister,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, showPassword ? 'Hide' : 'Show'))), registering && __jsx(InputGroup, {\n    size: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Confirm password\",\n    ref: passwordConfirmationRef,\n    isDisabled: status,\n    error: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: toggleRegister,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, showPassword ? 'Hide' : 'Show'))), __jsx(SimpleGrid, {\n    columns: \"2\",\n    gridGap: \"5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, __jsx(StyledButton, {\n    variantColor: \"blue\",\n    icon: registering ? AiOutlineDoubleLeft : AiOutlineForm,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Register for an account\",\n    onClick: function onClick() {\n      return setRegistering(!registering);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: FiLogIn,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Log into your account\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(SignInForm, \"cpdMfWorJnk/DC3RIxEv7daC1KQ=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/SignInForm.js"],"names":["useRef","useState","useMutation","Button","Flex","Heading","InputGroup","InputRightElement","SimpleGrid","Stack","AiOutlineForm","AiOutlineDoubleLeft","FiLogIn","StyledButton","StyledInput","StyledInputPW","REGISTER_USER_MUTATION","SIGNIN_USER_MUTATION","SignInForm","emailRef","nameRef","passwordRef","passwordConfirmationRef","status","setStatus","error","setError","showPassword","setShow","registering","setRegistering","register","registerRes","signin","signinRes","toggleRegister","handleSubmit","e","preventDefault","email","current","value","displayname","password","confirmpassword","variables","input","varaibles","message","replace"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useRef, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  Button,\n  Flex,\n  Heading,\n  InputGroup,\n  InputRightElement,\n  SimpleGrid,\n  Stack\n} from '@chakra-ui/core';\n\n// Styles\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled';\n\n// Helpers\nimport { REGISTER_USER_MUTATION, SIGNIN_USER_MUTATION } from '../lib/mutations';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef('');\n\n  // Hooks\n  const [status, setStatus] = useState(false);\n  const [error, setError] = useState('');\n  const [showPassword, setShow] = useState(false);\n  const [registering, setRegistering] = useState(false);\n\n  // Apollo\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n  const [signin, signinRes] = useMutation(SIGNIN_USER_MUTATION);\n\n  const toggleRegister = () => {\n    setShow(!showPassword);\n  };\n\n  const handleSubmit = async (e) => {\n    setStatus(true);\n    e.preventDefault();\n\n    const email = emailRef.current.value;\n    const displayname = nameRef.current.value;\n    const password = passwordRef.current.value;\n    const confirmpassword = passwordConfirmationRef.current.value;\n\n    if (registering) {\n      try {\n        await register({ variables: { input } });\n        await signin({ varaibles: { input } });\n      } catch (error) {\n        setError(error.message.replace('GraphQL error: ', ''));\n      }\n    } else {\n      try {\n        await signin({ variables: { input } });\n      } catch (error) {\n        setError(error.message.replace('GraphQL error: ', ''));\n      }\n    }\n\n    setStatus(false);\n  };\n\n  return (\n    <Stack spacing=\"0.5rem\" paddingBottom=\"2rem\">\n      {error !== '' && (\n        <Heading as=\"h5\" size=\"sm\" color=\"red.600\">\n          {error}\n        </Heading>\n      )}\n      <Flex\n        justify=\"center\"\n        flexDirection=\"column\"\n        margin=\"auto\"\n        minWidth=\"300px\"\n        maxWidth=\"400px\"\n      >\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <StyledInput\n            type=\"email\"\n            placeholder=\"Enter email\"\n            ref={emailRef}\n            isDisabled={status}\n          />\n\n          {registering && (\n            <StyledInput\n              type=\"text\"\n              placeholder=\"Enter display name\"\n              ref={nameRef}\n              isDisabled={status}\n            />\n          )}\n\n          <InputGroup size=\"md\">\n            <StyledInputPW\n              pr=\"4.5rem\"\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              ref={passwordRef}\n              isDisabled={status}\n              error={error}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={toggleRegister}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          {registering && (\n            <InputGroup size=\"md\">\n              <StyledInputPW\n                pr=\"4.5rem\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Confirm password\"\n                ref={passwordConfirmationRef}\n                isDisabled={status}\n                error={error}\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={toggleRegister}>\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          )}\n\n          <SimpleGrid columns=\"2\" gridGap=\"5px\">\n            <StyledButton\n              variantColor=\"blue\"\n              icon={registering ? AiOutlineDoubleLeft : AiOutlineForm}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Register for an account\"\n              onClick={() => setRegistering(!registering)}\n            />\n            <StyledButton\n              type=\"submit\"\n              variantColor=\"blue\"\n              icon={FiLogIn}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Log into your account\"\n            />\n          </SimpleGrid>\n        </form>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}