{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\GroceryForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Dependencies\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport Router from 'next/router';\nimport { useMutation } from '@apollo/react-hooks'; // Styles\n\nimport { Box, Flex, Grid } from '@chakra-ui/core';\nimport { MdAddShoppingCart } from 'react-icons/md'; // Helpers\n\nimport { ADD_ITEM_MUTATION } from '../lib/apollo/mutations';\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { StyledButton, StyledInput } from './styles/styled'; // Hooks + Contexts\n\nimport { UserContext } from '../lib/React/UserContext';\nimport { ShoppingContext } from '../lib/React/ShoppingContext';\n\nvar GroceryForm = function GroceryForm() {\n  _s();\n\n  // Form Refs\n  var productRef = useRef('');\n  var quantityRef = useRef(''); // Hooks + Contexts\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ShoppingContext),\n      isShopping = _useContext2.isShopping,\n      setIsShopping = _useContext2.setIsShopping;\n\n  var _useState = useState(false),\n      isCalling = _useState[0],\n      setIsCalling = _useState[1]; // Apollo\n\n\n  var _useMutation = useMutation(ADD_ITEM_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addItem = _useMutation2[0],\n      itemRes = _useMutation2[1]; // useEffect\n\n\n  useEffect(function () {\n    // Force the user to sign in\n    if (!user) Router.push('/signin');\n  }, [user]); // Handlers\n\n  var handleClick = function handleClick() {\n    setIsShopping(!isShopping);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setIsCalling(true);\n    var input = {\n      product: productRef.current.value,\n      quantity: parseInt(quantityRef.current.value)\n    };\n    addItem({\n      variables: {\n        input: input\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addItem: {\n          item: _objectSpread({\n            id: Math.round(Math.random() * -1000000)\n          }, input)\n        }\n      },\n      update: function update(cache, _ref) {\n        var addItem = _ref.data.addItem;\n\n        var _cache$readQuery = cache.readQuery({\n          query: USERS_ITEMS_QUERY\n        }),\n            currentUserItems = _cache$readQuery.currentUserItems;\n\n        var nodes = currentUserItems.nodes;\n        var item = addItem.item;\n        cache.writeQuery({\n          query: USERS_ITEMS_QUERY,\n          data: {\n            currentUserItems: {\n              nodes: [item].concat(_toConsumableArray(nodes))\n            }\n          }\n        });\n      }\n    });\n    setIsCalling(false);\n    productRef.current.value = '';\n    quantityRef.current.value = '';\n    productRef.current.focus();\n  };\n\n  return __jsx(Flex, {\n    justify: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    templateColumns: \"5fr 1fr\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(StyledInput, {\n    type: \"text\",\n    placeholder: \"Product\",\n    isDisabled: isCalling,\n    ref: productRef,\n    isRequired: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), __jsx(StyledInput, {\n    type: \"number\",\n    placeholder: \"Quantity\",\n    isDisabled: isCalling,\n    ref: quantityRef,\n    isRequired: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: MdAddShoppingCart,\n    isLoading: isCalling,\n    isDisabled: isCalling,\n    \"aira-busy\": isCalling,\n    height: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(GroceryForm, \"5GHqdAr3IQHrEwZxcMQQETdgsOE=\", false, function () {\n  return [useMutation];\n});\n\n_c = GroceryForm;\nexport default GroceryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroceryForm\");","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/GroceryForm.js"],"names":["useContext","useEffect","useRef","useState","Router","useMutation","Box","Flex","Grid","MdAddShoppingCart","ADD_ITEM_MUTATION","USERS_ITEMS_QUERY","StyledButton","StyledInput","UserContext","ShoppingContext","GroceryForm","productRef","quantityRef","user","isShopping","setIsShopping","isCalling","setIsCalling","addItem","itemRes","push","handleClick","handleSubmit","e","preventDefault","input","product","current","value","quantity","parseInt","variables","optimisticResponse","__typename","item","id","Math","round","random","update","cache","data","readQuery","query","currentUserItems","nodes","writeQuery","focus"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport Router from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\n\n// Styles\nimport { Box, Flex, Grid } from '@chakra-ui/core';\nimport { MdAddShoppingCart } from 'react-icons/md';\n\n// Helpers\nimport { ADD_ITEM_MUTATION } from '../lib/apollo/mutations';\nimport { USERS_ITEMS_QUERY } from '../lib/apollo/queries';\nimport { StyledButton, StyledInput } from './styles/styled';\n\n// Hooks + Contexts\nimport { UserContext } from '../lib/React/UserContext';\nimport { ShoppingContext } from '../lib/React/ShoppingContext';\n\nconst GroceryForm = () => {\n  // Form Refs\n  const productRef = useRef('');\n  const quantityRef = useRef('');\n\n  // Hooks + Contexts\n  const { user } = useContext(UserContext);\n  const { isShopping, setIsShopping } = useContext(ShoppingContext);\n  const [isCalling, setIsCalling] = useState(false);\n\n  // Apollo\n  const [addItem, itemRes] = useMutation(ADD_ITEM_MUTATION);\n\n  // useEffect\n  useEffect(() => {\n    // Force the user to sign in\n    if (!user) Router.push('/signin');\n  }, [user]);\n\n  // Handlers\n  const handleClick = () => {\n    setIsShopping(!isShopping);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsCalling(true);\n\n    const input = {\n      product: productRef.current.value,\n      quantity: parseInt(quantityRef.current.value)\n    };\n\n    addItem({\n      variables: { input },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addItem: {\n          item: {\n            id: Math.round(Math.random() * -1000000),\n            ...input\n          }\n        }\n      },\n      update: (cache, { data: { addItem } }) => {\n        const { currentUserItems } = cache.readQuery({\n          query: USERS_ITEMS_QUERY\n        });\n        const { nodes } = currentUserItems;\n        const { item } = addItem;\n\n        cache.writeQuery({\n          query: USERS_ITEMS_QUERY,\n          data: { currentUserItems: { nodes: [item, ...nodes] } }\n        });\n      }\n    });\n\n    setIsCalling(false);\n    productRef.current.value = '';\n    quantityRef.current.value = '';\n\n    productRef.current.focus();\n  };\n\n  return (\n    <Flex justify=\"center\">\n      <form method=\"post\" onSubmit={handleSubmit}>\n        <Grid templateColumns=\"5fr 1fr\">\n          <Box>\n            <StyledInput\n              type=\"text\"\n              placeholder=\"Product\"\n              isDisabled={isCalling}\n              ref={productRef}\n              isRequired\n            />\n            <StyledInput\n              type=\"number\"\n              placeholder=\"Quantity\"\n              isDisabled={isCalling}\n              ref={quantityRef}\n              isRequired\n            />\n          </Box>\n          <StyledButton\n            type=\"submit\"\n            variantColor=\"blue\"\n            icon={MdAddShoppingCart}\n            isLoading={isCalling}\n            isDisabled={isCalling}\n            aira-busy={isCalling}\n            height\n          />\n        </Grid>\n      </form>\n    </Flex>\n  );\n};\n\nexport default GroceryForm;\n"]},"metadata":{},"sourceType":"module"}