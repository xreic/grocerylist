{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useContext, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks'; // Styles\n\nimport { Button } from '@chakra-ui/core'; // Apollo\n\nimport { ADD_TO_HISTORY_MUTATION } from '../lib/apollo/mutations'; // React\n\nimport { StatusContext } from '../lib/React/StatusContext';\n\nvar GroceryCheckout = function GroceryCheckout() {\n  // Hooks + Contexts\n  var _useState = useState(false),\n      isCalling = _useState[0],\n      setIsCalling = _useState[1];\n\n  var _useContext = useContext(StatusContext),\n      status = _useContext.status; // Apollo\n\n\n  var _useMutation = useMutation(ADD_TO_HISTORY_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addToHistory = _useMutation2[0]; // Handlers\n\n\n  var handleCheckout = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var input;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setIsCalling(true);\n              input = {\n                products: status\n              };\n              _context.prev = 3;\n              _context.next = 6;\n              return addToHistory({\n                variables: {\n                  input: input\n                }\n              });\n\n            case 6:\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(JSON.parse(JSON.stringify(_context.t0)));\n\n            case 11:\n              setIsCalling(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 8]]);\n    }));\n\n    return function handleCheckout(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleCheckout\n  }, __jsx(Button, {\n    type: \"sumbit\",\n    variantColor: \"blue\",\n    alignSelf: \"center\",\n    width: \"35%\",\n    maxWidth: \"300px\",\n    marginBottom: \"2rem\",\n    isLoading: isCalling,\n    isDisabled: isCalling,\n    \"aira-busy\": isCalling,\n    \"aria-label\": \"Checkout the selected items\"\n  }, \"Checkout\"));\n};\n\nexport default GroceryCheckout;","map":null,"metadata":{},"sourceType":"module"}