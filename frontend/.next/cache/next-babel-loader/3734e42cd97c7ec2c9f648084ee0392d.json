{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from '@apollo/react-hooks';\nimport { NetworkStatus } from 'apollo-client';\nimport ErrorMessage from './ErrorMessage';\nimport PostUpvoter from './PostUpvoter';\nexport var ALL_POSTS_QUERY = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"OperationDefinition\",\n    \"operation\": \"query\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"allPosts\"\n    },\n    \"variableDefinitions\": [{\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"first\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NonNullType\",\n        \"type\": {\n          \"kind\": \"NamedType\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"Int\"\n          }\n        }\n      },\n      \"directives\": []\n    }, {\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"skip\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NonNullType\",\n        \"type\": {\n          \"kind\": \"NamedType\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"Int\"\n          }\n        }\n      },\n      \"directives\": []\n    }],\n    \"directives\": [],\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"allPosts\"\n        },\n        \"arguments\": [{\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"orderBy\"\n          },\n          \"value\": {\n            \"kind\": \"EnumValue\",\n            \"value\": \"createdAt_DESC\"\n          }\n        }, {\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"first\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"first\"\n            }\n          }\n        }, {\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"skip\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"skip\"\n            }\n          }\n        }],\n        \"directives\": [],\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"id\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"title\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"votes\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"url\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"createdAt\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }]\n        }\n      }, {\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"_allPostsMeta\"\n        },\n        \"arguments\": [],\n        \"directives\": [],\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"count\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }]\n        }\n      }]\n    }\n  }],\n  \"loc\": {\n    \"start\": 0,\n    \"end\": 222,\n    \"source\": {\n      \"body\": \"\\n  query allPosts($first: Int!, $skip: Int!) {\\n    allPosts(orderBy: createdAt_DESC, first: $first, skip: $skip) {\\n      id\\n      title\\n      votes\\n      url\\n      createdAt\\n    }\\n    _allPostsMeta {\\n      count\\n    }\\n  }\\n\",\n      \"name\": \"GraphQL request\",\n      \"locationOffset\": {\n        \"line\": 1,\n        \"column\": 1\n      }\n    }\n  }\n};\nexport var allPostsQueryVars = {\n  skip: 0,\n  first: 10\n};\nexport default function PostList() {\n  var _useQuery = useQuery(ALL_POSTS_QUERY, {\n    variables: allPostsQueryVars,\n    // Setting this value to true will make the component rerender when\n    // the \"networkStatus\" changes, so we are able to know if it is fetching\n    // more data\n    notifyOnNetworkStatusChange: true\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  var loadingMorePosts = networkStatus === NetworkStatus.fetchMore;\n\n  var loadMorePosts = function loadMorePosts() {\n    fetchMore({\n      variables: {\n        skip: allPosts.length\n      },\n      updateQuery: function updateQuery(previousResult, _ref) {\n        var fetchMoreResult = _ref.fetchMoreResult;\n\n        if (!fetchMoreResult) {\n          return previousResult;\n        }\n\n        return Object.assign({}, previousResult, {\n          // Append the new posts results to the old one\n          allPosts: [].concat(_toConsumableArray(previousResult.allPosts), _toConsumableArray(fetchMoreResult.allPosts))\n        });\n      }\n    });\n  };\n\n  if (error) return __jsx(ErrorMessage, {\n    message: \"Error loading posts.\"\n  });\n  if (loading && !loadingMorePosts) return __jsx(\"div\", null, \"Loading\");\n  var allPosts = data.allPosts,\n      _allPostsMeta = data._allPostsMeta;\n  var areMorePosts = allPosts.length < _allPostsMeta.count;\n  return __jsx(\"section\", {\n    className: \"jsx-1458778202\"\n  }, __jsx(\"ul\", {\n    className: \"jsx-1458778202\"\n  }, allPosts.map(function (post, index) {\n    return __jsx(\"li\", {\n      key: post.id,\n      className: \"jsx-1458778202\"\n    }, __jsx(\"div\", {\n      className: \"jsx-1458778202\"\n    }, __jsx(\"span\", {\n      className: \"jsx-1458778202\"\n    }, index + 1, \". \"), __jsx(\"a\", {\n      href: post.url,\n      className: \"jsx-1458778202\"\n    }, post.title), __jsx(PostUpvoter, {\n      id: post.id,\n      votes: post.votes\n    })));\n  })), areMorePosts && __jsx(\"button\", {\n    onClick: function onClick() {\n      return loadMorePosts();\n    },\n    disabled: loadingMorePosts,\n    className: \"jsx-1458778202\"\n  }, loadingMorePosts ? 'Loading...' : 'Show More'), __jsx(_JSXStyle, {\n    id: \"1458778202\"\n  }, [\"section.jsx-1458778202{padding-bottom:20px;}\", \"li.jsx-1458778202{display:block;margin-bottom:10px;}\", \"div.jsx-1458778202{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\", \"a.jsx-1458778202{font-size:14px;margin-right:10px;-webkit-text-decoration:none;text-decoration:none;padding-bottom:0;border:0;}\", \"span.jsx-1458778202{font-size:14px;margin-right:5px;}\", \"ul.jsx-1458778202{margin:0;padding:0;}\", \"button.jsx-1458778202:before{-webkit-align-self:center;-ms-flex-item-align:center;align-self:center;border-style:solid;border-width:6px 4px 0 4px;border-color:#ffffff transparent transparent transparent;content:'';height:0;margin-right:5px;width:0;}\"]));\n}","map":null,"metadata":{},"sourceType":"module"}