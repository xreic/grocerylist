{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Grocery List\\\\frontend\\\\components\\\\SignInForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Dependencies\nimport { useRef, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Button, Flex, Heading, InputGroup, InputRightElement, SimpleGrid, Stack } from '@chakra-ui/core'; // Styles\n\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled'; // Helpers\n\nimport { REGISTER_USER_MUTATION, SIGNIN_USER_MUTATION } from '../lib/apollo/mutations';\nimport handleLogin from '../lib/HandleLogin.js';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef(''); // Hooks\n\n  const router = useRouter();\n  const {\n    0: status,\n    1: setStatus\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: showPassword,\n    1: setShowPassword\n  } = useState(false);\n  const {\n    0: isRegistering,\n    1: setIsRegistering\n  } = useState(false); // Apollo\n\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n  const [signin, signinRes] = useMutation(SIGNIN_USER_MUTATION); // Handlers\n\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRegister = () => {\n    setError('');\n    setIsRegistering(!isRegistering);\n  };\n\n  const handleSubmit = async e => {\n    setError('');\n    setStatus(true);\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const displayname = nameRef.current.value;\n    const confirmpassword = passwordConfirmationRef.current.value;\n\n    try {\n      if (isRegistering) {\n        await register({\n          variables: {\n            input: {\n              email,\n              displayname,\n              password,\n              confirmpassword\n            }\n          }\n        });\n      }\n\n      const tokenRes = await signin({\n        variables: {\n          input: {\n            email,\n            password\n          }\n        }\n      });\n      handleLogin(tokenRes, setError);\n      router.push('/');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setStatus(false);\n      setIsRegistering(false); // I want to keep these on view change\n\n      emailRef.current.value = '';\n      passwordRef.current.value = ''; // These are unimportant, so don't keep\n      // nameRef.current.value = '';\n      // passwordConfirmationRef.current.value = '';\n    }\n  };\n\n  return __jsx(Stack, {\n    spacing: \"0.5rem\",\n    paddingBottom: \"2rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, error !== '' && __jsx(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }\n  }), __jsx(Flex, {\n    justify: \"center\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    minWidth: \"300px\",\n    maxWidth: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(StyledInput, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    ref: emailRef,\n    isDisabled: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), isRegistering && __jsx(StyledInput, {\n    type: \"text\",\n    placeholder: \"Enter display name\",\n    ref: nameRef,\n    isDisabled: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), __jsx(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Enter password\",\n    ref: passwordRef,\n    isDisabled: status,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: togglePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, showPassword ? 'Hide' : 'Show'))), isRegistering && __jsx(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, __jsx(StyledInputPW, {\n    pr: \"4.5rem\",\n    type: showPassword ? 'text' : 'password',\n    placeholder: \"Confirm password\",\n    ref: passwordConfirmationRef,\n    isDisabled: status,\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), __jsx(InputRightElement, {\n    width: \"4.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    h: \"1.75rem\",\n    size: \"sm\",\n    onClick: togglePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, showPassword ? 'Hide' : 'Show'))), __jsx(SimpleGrid, {\n    columns: \"2\",\n    gridGap: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, __jsx(StyledButton, {\n    variantColor: \"blue\",\n    icon: isRegistering ? AiOutlineDoubleLeft : AiOutlineForm,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Register for an account\",\n    onClick: toggleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), __jsx(StyledButton, {\n    type: \"submit\",\n    variantColor: \"blue\",\n    icon: FiLogIn,\n    isLoading: status,\n    isDisabled: status,\n    \"aira-busy\": status,\n    \"aria-label\": \"Log into your account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["F:/Work/Projects/Grocery List/frontend/components/SignInForm.js"],"names":["useRef","useState","useRouter","useMutation","Button","Flex","Heading","InputGroup","InputRightElement","SimpleGrid","Stack","AiOutlineForm","AiOutlineDoubleLeft","FiLogIn","StyledButton","StyledInput","StyledInputPW","REGISTER_USER_MUTATION","SIGNIN_USER_MUTATION","handleLogin","SignInForm","emailRef","nameRef","passwordRef","passwordConfirmationRef","router","status","setStatus","error","setError","showPassword","setShowPassword","isRegistering","setIsRegistering","register","registerRes","signin","signinRes","togglePassword","toggleRegister","handleSubmit","e","preventDefault","email","current","value","password","displayname","confirmpassword","variables","input","tokenRes","push","message"],"mappings":"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","sourcesContent":["// Dependencies\nimport { useRef, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n  Button,\n  Flex,\n  Heading,\n  InputGroup,\n  InputRightElement,\n  SimpleGrid,\n  Stack\n} from '@chakra-ui/core';\n\n// Styles\nimport { AiOutlineForm, AiOutlineDoubleLeft } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\nimport { StyledButton, StyledInput, StyledInputPW } from './styles/styled';\n\n// Helpers\nimport {\n  REGISTER_USER_MUTATION,\n  SIGNIN_USER_MUTATION\n} from '../lib/apollo/mutations';\nimport handleLogin from '../lib/HandleLogin.js';\n\nconst SignInForm = () => {\n  // Form Refs\n  const emailRef = useRef('');\n  const nameRef = useRef('');\n  const passwordRef = useRef('');\n  const passwordConfirmationRef = useRef('');\n\n  // Hooks\n  const router = useRouter();\n  const [status, setStatus] = useState(false);\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n\n  // Apollo\n  const [register, registerRes] = useMutation(REGISTER_USER_MUTATION);\n  const [signin, signinRes] = useMutation(SIGNIN_USER_MUTATION);\n\n  // Handlers\n  const togglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const toggleRegister = () => {\n    setError('');\n    setIsRegistering(!isRegistering);\n  };\n\n  const handleSubmit = async (e) => {\n    setError('');\n    setStatus(true);\n    e.preventDefault();\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const displayname = nameRef.current.value;\n    const confirmpassword = passwordConfirmationRef.current.value;\n\n    try {\n      if (isRegistering) {\n        await register({\n          variables: {\n            input: { email, displayname, password, confirmpassword }\n          }\n        });\n      }\n\n      const tokenRes = await signin({\n        variables: { input: { email, password } }\n      });\n\n      handleLogin(tokenRes, setError);\n      router.push('/');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setStatus(false);\n      setIsRegistering(false);\n\n      // I want to keep these on view change\n      emailRef.current.value = '';\n      passwordRef.current.value = '';\n\n      // These are unimportant, so don't keep\n      // nameRef.current.value = '';\n      // passwordConfirmationRef.current.value = '';\n    }\n  };\n\n  return (\n    <Stack spacing=\"0.5rem\" paddingBottom=\"2rem\">\n      {error !== '' && <Error error={error} />}\n      <Flex\n        justify=\"center\"\n        flexDirection=\"column\"\n        margin=\"auto\"\n        minWidth=\"300px\"\n        maxWidth=\"400px\"\n      >\n        <form method=\"post\" onSubmit={handleSubmit}>\n          <StyledInput\n            type=\"email\"\n            placeholder=\"Enter email\"\n            ref={emailRef}\n            isDisabled={status}\n          />\n\n          {isRegistering && (\n            <StyledInput\n              type=\"text\"\n              placeholder=\"Enter display name\"\n              ref={nameRef}\n              isDisabled={status}\n            />\n          )}\n\n          <InputGroup size=\"md\">\n            <StyledInputPW\n              pr=\"4.5rem\"\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Enter password\"\n              ref={passwordRef}\n              isDisabled={status}\n              error={error}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={togglePassword}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n\n          {isRegistering && (\n            <InputGroup size=\"md\">\n              <StyledInputPW\n                pr=\"4.5rem\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Confirm password\"\n                ref={passwordConfirmationRef}\n                isDisabled={status}\n                error={error}\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={togglePassword}>\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          )}\n\n          <SimpleGrid columns=\"2\" gridGap=\"5px\">\n            <StyledButton\n              variantColor=\"blue\"\n              icon={isRegistering ? AiOutlineDoubleLeft : AiOutlineForm}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Register for an account\"\n              onClick={toggleRegister}\n            />\n            <StyledButton\n              type=\"submit\"\n              variantColor=\"blue\"\n              icon={FiLogIn}\n              isLoading={status}\n              isDisabled={status}\n              aira-busy={status}\n              aria-label=\"Log into your account\"\n            />\n          </SimpleGrid>\n        </form>\n      </Flex>\n    </Stack>\n  );\n};\n\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}